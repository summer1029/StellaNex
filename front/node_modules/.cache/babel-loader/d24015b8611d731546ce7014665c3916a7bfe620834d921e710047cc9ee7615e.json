{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\Desktop\\\\stellanex_graduation\\\\src\\\\Component\\\\LikeDislikeFunc.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react'\n\n// export default function LikeDislikeFunc({ reviewId, love, hate }) {\n\n//     // 좋아요 갯수 담을 변수\n//     const [like, setLike] = useState()\n//     // 싫어요 갯수 담을 변수\n//     const [dislike, setDislike] = useState()\n//     // 좋아요 상태 변수 : 처음에는 좋아요 되어있지 않음\n//     const [isLiked, setIsLiked] = useState(false)\n//     // 싫어요 상태 변수 : 처음에는 싫어요 되어있지 않음\n//     const [isDisliked, setIsDisliked] = useState(false)\n\n//     useEffect(() => {\n//         setLike(love);\n//     }, [love])\n\n//     useEffect(() => {\n//         setDislike(hate);\n//     }, [hate])\n\n//     const handleLike = () => {\n//         // 1. 아무것도 눌려져있지 않다면 좋아요 1 올리기\n//         if (!isLiked && !isDisliked) {\n//             setLike(like + 1)\n//             setIsLiked(true)\n//         }\n//         // 2. 좋아요 버튼이 이미 클릭 되어있다면 좋아요 1 내리기\n//         else if (isLiked) {\n//             setLike(like - 1)\n//             setIsLiked(false)\n//         }\n//         // 3. 싫어요 버튼이 이미 클릭 되어있다면 좋아요 1 올리고 싫어요 1 내리기\n//         else if (isDisliked) {\n//             setLike(like + 1)\n//             setIsLiked(true)\n//             setDislike(dislike - 1)\n//             setIsDisliked(false)\n//         }\n//     }\n\n//     const handleDislike = () => {\n//         // 1. 아무것도 클릭되어있지 않다면 싫어요 1 올리기\n//         if (!isLiked && !isDisliked) {\n//             setDislike(dislike + 1)\n//             setIsDisliked(true)\n//         }\n//         // 2. 싫어요 버튼이 이미 클릭되어있다면 싫어요 1 내리기\n//         else if (isDisliked) {\n//             setDislike(dislike - 1)\n//             setIsDisliked(false)\n//         }\n//         // 3. 좋아요 버튼이 이미 클릭 되어있다면 싫어요 1 올리기 좋아요 1 내리기\n//         else if (isLiked) {\n//             setDislike(dislike + 1)\n//             setIsDisliked(true)\n//             setLike(like - 1)\n//             setIsLiked(false)\n//         }\n//     }\n\n//     useEffect(() => {\n\n//         fetch(`http://192.168.56.1:8080/movie/love/${reviewId}`, {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify({\n//                 love: isLiked ? 1 : -1  // 좋아요 상태에 따라 1 또는 -1 전달\n//             })\n//         })\n//             .then((res) => {\n//                 // 응답 상태가 성공적이면 JSON으로 파싱\n//                 if (!res.ok) {\n//                     throw new Error('Network response was not ok');\n//                 }\n//                 return res.json();\n//             })\n//             .then((data) => {\n//                 console.log(\"서버 응답:\", data); // 서버의 응답 내용 확인\n//             })\n//             .catch((err) => console.error(err));\n\n//     }, [like])\n\n//     useEffect(() => {\n\n//         fetch(`http://192.168.56.1:8080/movie/hate/${reviewId}`, {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify({\n//                 hate: isDisliked ? 1 : -1  // 좋아요 상태에 따라 1 또는 -1 전달\n//             })\n//         })\n//             .then((res) => {\n//                 // 응답 상태가 성공적이면 JSON으로 파싱\n//                 if (!res.ok) {\n//                     throw new Error('Network response was not ok');\n//                 }\n//                 return res.json();\n//             })\n//             .then((data) => {\n//                 console.log(\"서버 응답:\", data); // 서버의 응답 내용 확인\n//             })\n//             .catch((err) => console.error(err));\n\n//     }, [dislike])\n\n//     return (\n//         <div>\n//             <button onClick={handleLike} className='text-white'>\n//                 좋아요 {like}\n//             </button>\n\n//             <button onClick={handleDislike} className='text-white'>\n//                 싫어요 {dislike}\n//             </button>\n//         </div>\n//     )\n// }\n\n// import React, { useEffect, useState } from 'react';\n\n// export default function LikeDislikeFunc({ reviewId, love, hate }) {\n//   // 좋아요 갯수 담을 변수\n//   const [like, setLike] = useState(love);\n//   // 싫어요 갯수 담을 변수\n//   const [dislike, setDislike] = useState(hate);\n//   // 좋아요 상태 변수 : 처음에는 좋아요 되어있지 않음\n//   const [isLiked, setIsLiked] = useState(false);\n//   // 싫어요 상태 변수 : 처음에는 싫어요 되어있지 않음\n//   const [isDisliked, setIsDisliked] = useState(false);\n\n//   const handleLike = () => {\n//     // 1. 아무것도 눌려져있지 않다면 좋아요 1 올리기\n//     if (!isLiked && !isDisliked) {\n//       setLike((prev) => prev + 1);\n//       setIsLiked(true);\n//     }\n//     // 2. 좋아요 버튼이 이미 클릭 되어있다면 좋아요 1 내리기\n//     else if (isLiked) {\n//       setLike((prev) => prev - 1);\n//       setIsLiked(false);\n//     }\n//     // 3. 싫어요 버튼이 이미 클릭 되어있다면 좋아요 1 올리고 싫어요 1 내리기\n//     else if (isDisliked) {\n//       setLike((prev) => prev + 1);\n//       setIsLiked(true);\n//       setDislike((prev) => prev - 1);\n//       setIsDisliked(false);\n//     }\n//   };\n\n//   const handleDislike = () => {\n//     // 1. 아무것도 클릭되어있지 않다면 싫어요 1 올리기\n//     if (!isLiked && !isDisliked) {\n//       setDislike((prev) => prev + 1);\n//       setIsDisliked(true);\n//     }\n//     // 2. 싫어요 버튼이 이미 클릭되어있다면 싫어요 1 내리기\n//     else if (isDisliked) {\n//       setDislike((prev) => prev - 1);\n//       setIsDisliked(false);\n//     }\n//     // 3. 좋아요 버튼이 이미 클릭 되어있다면 싫어요 1 올리기 좋아요 1 내리기\n//     else if (isLiked) {\n//       setDislike((prev) => prev + 1);\n//       setIsDisliked(true);\n//       setLike((prev) => prev - 1);\n//       setIsLiked(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (isLiked !== null) {\n//       fetch(`http://192.168.56.1:8080/movie/love/${reviewId}`, {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({\n//           love: isLiked ? 1 : -1,\n//         }),\n//       })\n//         .then((res) => {\n//           if (!res.ok) {\n//             throw new Error('Network response was not ok');\n//           }\n//           return res.json();\n//         })\n//         .then((data) => {\n//           console.log('서버 응답:', data);\n//           // 서버 응답의 값과 동기화\n//           setLike(data.love);\n//           setDislike(data.hate)\n//         })\n//         .catch((err) => console.error(err));\n//     }\n//   }, [isLiked, reviewId]);\n\n//   useEffect(() => {\n//     if (isDisliked !== null) {\n//       fetch(`http://192.168.56.1:8080/movie/hate/${reviewId}`, {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({\n//           hate: isDisliked ? 1 : -1,\n//         }),\n//       })\n//         .then((res) => {\n//           if (!res.ok) {\n//             throw new Error('Network response was not ok');\n//           }\n//           return res.json();\n//         })\n//         .then((data) => {\n//           console.log('서버 응답:', data);\n//           // 서버 응답의 값과 동기화\n//           setDislike(data.hate);\n//           setLike(data.love)\n//         })\n//         .catch((err) => console.error(err));\n//     }\n//   }, [isDisliked, reviewId]);\n\n//   return (\n//     <div>\n//       <button onClick={handleLike} className=\"text-white\">\n//         좋아요 {like}\n//       </button>\n\n//       <button onClick={handleDislike} className=\"text-white\">\n//         싫어요 {dislike}\n//       </button>\n//     </div>\n//   );\n// }\n\n// import React, { useEffect, useState } from 'react';\n\n// export default function LikeDislikeFunc({ reviewId, love, hate }) {\n//   const [like, setLike] = useState(love);\n//   const [dislike, setDislike] = useState(hate);\n// //   const [isLiked, setIsLiked] = useState(false);\n// //   const [isDisliked, setIsDisliked] = useState(false);   \n//   const [isLiked, setIsLiked] = useState(love > 0);\n//   const [isDisliked, setIsDisliked] = useState(hate > 0);\n\n//   useEffect(() => {\n//     if (isLiked !== null) {\n//         fetch(`http://192.168.56.1:8080/movie/love/${reviewId}`, {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify({\n//                 love: isLiked ? 1 : -1,\n//             }),\n//         })\n//             .then((res) => {\n//                 if (!res.ok) {\n//                     throw new Error('Network response was not ok');\n//                 }\n//                 return res.json();\n//             })\n//             .then((data) => {\n//                 console.log('서버 응답:', data);\n//                 // 서버 응답의 값과 동기화\n//                 setLike(data.love);\n//                 setDislike(data.hate);\n//             })\n//             .catch((err) => console.error(err));\n//     }\n// }, [isLiked]);\n\n// useEffect(() => {\n//     if (isDisliked !== null) {\n//         fetch(`http://192.168.56.1:8080/movie/hate/${reviewId}`, {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify({\n//                 hate: isDisliked ? 1 : -1,\n//             }),\n//         })\n//             .then((res) => {\n//                 if (!res.ok) {\n//                     throw new Error('Network response was not ok');\n//                 }\n//                 return res.json();\n//             })\n//             .then((data) => {\n//                 console.log('서버 응답:', data);\n//                 // 서버 응답의 값과 동기화\n//                 setDislike(data.hate);\n//                 setLike(data.love);\n//             })\n//             .catch((err) => console.error(err));\n//     }\n// }, [isDisliked, reviewId]);\n\n//   const handleLike = () => {\n//     // 1. 아무것도 눌려져있지 않다면 좋아요 1 올리기\n//     if (!isLiked && !isDisliked) {\n//         setLike((prev) => prev + 1);\n//         setIsLiked(true);\n//     }\n//     // 2. 좋아요 버튼이 이미 클릭 되어있다면 좋아요 1 내리기\n//     else if (isLiked) {\n//         setLike((prev) => prev - 1);\n//         setIsLiked(false);\n//     }\n//     // 3. 싫어요 버튼이 이미 클릭 되어있다면 좋아요 1 올리고 싫어요 1 내리기\n//     else if (isDisliked) {\n//         setLike((prev) => prev + 1);\n//         setIsLiked(true);\n//         setDislike((prev) => prev - 1);\n//         setIsDisliked(false);\n//     }\n// };\n\n// const handleDislike = () => {\n//     // 1. 아무것도 클릭되어있지 않다면 싫어요 1 올리기\n//     if (!isLiked && !isDisliked) {\n//         setDislike((prev) => prev + 1);\n//         setIsDisliked(true);\n//     }\n//     // 2. 싫어요 버튼이 이미 클릭되어있다면 싫어요 1 내리기\n//     else if (isDisliked) {\n//         setDislike((prev) => prev - 1);\n//         setIsDisliked(false);\n//     }\n//     // 3. 좋아요 버튼이 이미 클릭 되어있다면 싫어요 1 올리고 좋아요 1 내리기\n//     else if (isLiked) {\n//         setDislike((prev) => prev + 1);\n//         setIsDisliked(true);\n//         setLike((prev) => prev - 1);\n//         setIsLiked(false);\n//     }\n// };\n\n//   return (\n//     <div>\n//       <button onClick={handleLike} className=\"text-white\">\n//         좋아요 {like}\n//       </button>\n\n//       <button onClick={handleDislike} className=\"text-white\">\n//         싫어요 {dislike}\n//       </button>\n//     </div>\n//   );\n// }\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LikeDislikeFunc({\n  reviewId,\n  love,\n  hate\n}) {\n  _s();\n  const [like, setLike] = useState(love);\n  const [dislike, setDislike] = useState(hate);\n  const [isLiked, setIsLiked] = useState(love > 0);\n  const [isDisliked, setIsDisliked] = useState(hate > 0);\n  const [isLoading, setIsLoading] = useState(false); // 로딩 상태 추가\n\n  // props가 변경될 때마다 상태를 업데이트\n  useEffect(() => {\n    console.log(\"상태값\", isLiked, isDisliked);\n    setLike(love);\n    setDislike(hate);\n    setIsLiked(love > 0);\n    setIsDisliked(hate > 0);\n  }, [reviewId, love, hate, isLiked, isDisliked]);\n  const handleLike = async () => {\n    if (isLoading) return; // 로딩 중일 경우 함수 종료\n\n    setIsLoading(true); // 요청 시작\n    try {\n      if (!isLiked && !isDisliked) {\n        setLike(prev => prev + 1);\n        setIsLiked(true);\n        await fetchLoveUpdate(1); // 서버에 좋아요 추가 요청\n      } else if (isLiked) {\n        setLike(prev => prev - 1);\n        setIsLiked(false);\n        await fetchLoveUpdate(-1); // 서버에 좋아요 취소 요청\n      } else if (isDisliked) {\n        setLike(prev => prev + 1);\n        setIsLiked(true);\n        setDislike(prev => prev - 1);\n        setIsDisliked(false);\n        await fetchLoveUpdate(1); // 서버에 좋아요 추가\n        await fetchHateUpdate(-1); // 서버에 싫어요 취소 요청\n      }\n    } catch (error) {\n      console.error('좋아요 요청 오류:', error);\n    } finally {\n      setIsLoading(false); // 요청 완료\n    }\n  };\n  const handleDislike = async () => {\n    if (isLoading) return; // 로딩 중일 경우 함수 종료\n\n    setIsLoading(true); // 요청 시작\n    try {\n      if (!isLiked && !isDisliked) {\n        setDislike(prev => prev + 1);\n        setIsDisliked(true);\n        await fetchHateUpdate(1); // 서버에 싫어요 추가 요청\n      } else if (isDisliked) {\n        setDislike(prev => prev - 1);\n        setIsDisliked(false);\n        await fetchHateUpdate(-1); // 서버에 싫어요 취소 요청\n      } else if (isLiked) {\n        setDislike(prev => prev + 1);\n        setIsDisliked(true);\n        setLike(prev => prev - 1);\n        setIsLiked(false);\n        await fetchHateUpdate(1); // 서버에 싫어요 추가\n        await fetchLoveUpdate(-1); // 서버에 좋아요 취소 요청\n      }\n    } catch (error) {\n      console.error('싫어요 요청 오류:', error);\n    } finally {\n      setIsLoading(false); // 요청 완료\n    }\n  };\n  const fetchLoveUpdate = async action => {\n    const response = await fetch(`http://192.168.56.1:8080/movie/love/${reviewId}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        love: action\n      })\n    });\n    return handleResponse(response);\n  };\n  const fetchHateUpdate = async action => {\n    const response = await fetch(`http://192.168.56.1:8080/movie/hate/${reviewId}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        hate: action\n      })\n    });\n    return handleResponse(response);\n  };\n  const handleResponse = async res => {\n    if (!res.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await res.json();\n    console.log('서버 응답:', data);\n\n    // 서버에서 반환된 값을 상태에 업데이트\n    setLike(data.love);\n    setDislike(data.hate);\n\n    // 새로고침 시 상태 업데이트\n    setIsLiked(data.love > 0);\n    setIsDisliked(data.hate > 0);\n    return data;\n  };\n  return (\n    /*#__PURE__*/\n    // <div>\n    //     <button onClick={handleLike} className=\"text-white\" disabled={isLoading}>\n    //         좋아요 {like}\n    //     </button>\n    //     <button onClick={handleDislike} className=\"text-white\" disabled={isLoading}>\n    //         싫어요 {dislike}\n    //     </button>\n    // </div>\n    _jsxDEV(\"div\", {\n      className: \"flex justify-end items-center\",\n      children: [like !== null && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLike,\n        className: \"flex items-center mr-2\",\n        disabled: isLoading,\n        children: [isLiked ? /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"fill-white w-6 h-6\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 512 512\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M313.4 32.9c26 5.2 42.9 30.5 37.7 56.5l-2.3 11.4c-5.3 26.7-15.1 52.1-28.8 75.2l144 0c26.5 0 48 21.5 48 48c0 18.5-10.5 34.6-25.9 42.6C497 275.4 504 288.9 504 304c0 23.4-16.8 42.9-38.9 47.1c4.4 7.3 6.9 15.8 6.9 24.9c0 21.3-13.9 39.4-33.1 45.6c.7 3.3 1.1 6.8 1.1 10.4c0 26.5-21.5 48-48 48l-97.5 0c-19 0-37.5-5.6-53.3-16.1l-38.5-25.7C176 420.4 160 390.4 160 358.3l0-38.3 0-48 0-24.9c0-29.2 13.3-56.7 36-75l7.4-5.9c26.5-21.2 44.6-51 51.2-84.2l2.3-11.4c5.2-26 30.5-42.9 56.5-37.7zM32 192l64 0c17.7 0 32 14.3 32 32l0 224c0 17.7-14.3 32-32 32l-64 0c-17.7 0-32-14.3-32-32L0 224c0-17.7 14.3-32 32-32z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"fill-white w-6 h-6\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 512 512\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M323.8 34.8c-38.2-10.9-78.1 11.2-89 49.4l-5.7 20c-3.7 13-10.4 25-19.5 35l-51.3 56.4c-8.9 9.8-8.2 25 1.6 33.9s25 8.2 33.9-1.6l51.3-56.4c14.1-15.5 24.4-34 30.1-54.1l5.7-20c3.6-12.7 16.9-20.1 29.7-16.5s20.1 16.9 16.5 29.7l-5.7 20c-5.7 19.9-14.7 38.7-26.6 55.5c-5.2 7.3-5.8 16.9-1.7 24.9s12.3 13 21.3 13L448 224c8.8 0 16 7.2 16 16c0 6.8-4.3 12.7-10.4 15c-7.4 2.8-13 9-14.9 16.7s.1 15.8 5.3 21.7c2.5 2.8 4 6.5 4 10.6c0 7.8-5.6 14.3-13 15.7c-8.2 1.6-15.1 7.3-18 15.2s-1.6 16.7 3.6 23.3c2.1 2.7 3.4 6.1 3.4 9.9c0 6.7-4.2 12.6-10.2 14.9c-11.5 4.5-17.7 16.9-14.4 28.8c.4 1.3 .6 2.8 .6 4.3c0 8.8-7.2 16-16 16l-97.5 0c-12.6 0-25-3.7-35.5-10.7l-61.7-41.1c-11-7.4-25.9-4.4-33.3 6.7s-4.4 25.9 6.7 33.3l61.7 41.1c18.4 12.3 40 18.8 62.1 18.8l97.5 0c34.7 0 62.9-27.6 64-62c14.6-11.7 24-29.7 24-50c0-4.5-.5-8.8-1.3-13c15.4-11.7 25.3-30.2 25.3-51c0-6.5-1-12.8-2.8-18.7C504.8 273.7 512 257.7 512 240c0-35.3-28.6-64-64-64l-92.3 0c4.7-10.4 8.7-21.2 11.8-32.2l5.7-20c10.9-38.2-11.2-78.1-49.4-89zM32 192c-17.7 0-32 14.3-32 32L0 448c0 17.7 14.3 32 32 32l64 0c17.7 0 32-14.3 32-32l0-224c0-17.7-14.3-32-32-32l-64 0z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-white m-2\",\n          children: [\" \\uC88B\\uC544\\uC694 \", like, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 17\n      }, this), dislike !== null && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDislike,\n        className: \"flex items-center\",\n        disabled: isLoading,\n        children: [isDisliked ? /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"fill-white w-6 h-6\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 512 512\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M313.4 479.1c26-5.2 42.9-30.5 37.7-56.5l-2.3-11.4c-5.3-26.7-15.1-52.1-28.8-75.2l144 0c26.5 0 48-21.5 48-48c0-18.5-10.5-34.6-25.9-42.6C497 236.6 504 223.1 504 208c0-23.4-16.8-42.9-38.9-47.1c4.4-7.3 6.9-15.8 6.9-24.9c0-21.3-13.9-39.4-33.1-45.6c.7-3.3 1.1-6.8 1.1-10.4c0-26.5-21.5-48-48-48l-97.5 0c-19 0-37.5 5.6-53.3 16.1L202.7 73.8C176 91.6 160 121.6 160 153.7l0 38.3 0 48 0 24.9c0 29.2 13.3 56.7 36 75l7.4 5.9c26.5 21.2 44.6 51 51.2 84.2l2.3 11.4c5.2 26 30.5 42.9 56.5 37.7zM32 384l64 0c17.7 0 32-14.3 32-32l0-224c0-17.7-14.3-32-32-32L32 96C14.3 96 0 110.3 0 128L0 352c0 17.7 14.3 32 32 32z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"fill-white w-6 h-6\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 512 512\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M323.8 477.2c-38.2 10.9-78.1-11.2-89-49.4l-5.7-20c-3.7-13-10.4-25-19.5-35l-51.3-56.4c-8.9-9.8-8.2-25 1.6-33.9s25-8.2 33.9 1.6l51.3 56.4c14.1 15.5 24.4 34 30.1 54.1l5.7 20c3.6 12.7 16.9 20.1 29.7 16.5s20.1-16.9 16.5-29.7l-5.7-20c-5.7-19.9-14.7-38.7-26.6-55.5c-5.2-7.3-5.8-16.9-1.7-24.9s12.3-13 21.3-13L448 288c8.8 0 16-7.2 16-16c0-6.8-4.3-12.7-10.4-15c-7.4-2.8-13-9-14.9-16.7s.1-15.8 5.3-21.7c2.5-2.8 4-6.5 4-10.6c0-7.8-5.6-14.3-13-15.7c-8.2-1.6-15.1-7.3-18-15.2s-1.6-16.7 3.6-23.3c2.1-2.7 3.4-6.1 3.4-9.9c0-6.7-4.2-12.6-10.2-14.9c-11.5-4.5-17.7-16.9-14.4-28.8c.4-1.3 .6-2.8 .6-4.3c0-8.8-7.2-16-16-16l-97.5 0c-12.6 0-25 3.7-35.5 10.7l-61.7 41.1c-11 7.4-25.9 4.4-33.3-6.7s-4.4-25.9 6.7-33.3l61.7-41.1c18.4-12.3 40-18.8 62.1-18.8L384 32c34.7 0 62.9 27.6 64 62c14.6 11.7 24 29.7 24 50c0 4.5-.5 8.8-1.3 13c15.4 11.7 25.3 30.2 25.3 51c0 6.5-1 12.8-2.8 18.7C504.8 238.3 512 254.3 512 272c0 35.3-28.6 64-64 64l-92.3 0c4.7 10.4 8.7 21.2 11.8 32.2l5.7 20c10.9 38.2-11.2 78.1-49.4 89zM32 384c-17.7 0-32-14.3-32-32L0 128c0-17.7 14.3-32 32-32l64 0c17.7 0 32 14.3 32 32l0 224c0 17.7-14.3 32-32 32l-64 0z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-white ml-2\",\n          children: [\" \\uC2EB\\uC5B4\\uC694 \", dislike, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(LikeDislikeFunc, \"PHEJH1I12+hmmpJdqy4DKWhExS8=\");\n_c = LikeDislikeFunc;\nvar _c;\n$RefreshReg$(_c, \"LikeDislikeFunc\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","LikeDislikeFunc","reviewId","love","hate","_s","like","setLike","dislike","setDislike","isLiked","setIsLiked","isDisliked","setIsDisliked","isLoading","setIsLoading","console","log","handleLike","prev","fetchLoveUpdate","fetchHateUpdate","error","handleDislike","action","response","fetch","method","headers","body","JSON","stringify","handleResponse","res","ok","Error","data","json","className","children","onClick","disabled","xmlns","viewBox","d","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Samsung/Desktop/stellanex_graduation/src/Component/LikeDislikeFunc.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react'\r\n\r\n// export default function LikeDislikeFunc({ reviewId, love, hate }) {\r\n\r\n//     // 좋아요 갯수 담을 변수\r\n//     const [like, setLike] = useState()\r\n//     // 싫어요 갯수 담을 변수\r\n//     const [dislike, setDislike] = useState()\r\n//     // 좋아요 상태 변수 : 처음에는 좋아요 되어있지 않음\r\n//     const [isLiked, setIsLiked] = useState(false)\r\n//     // 싫어요 상태 변수 : 처음에는 싫어요 되어있지 않음\r\n//     const [isDisliked, setIsDisliked] = useState(false)\r\n\r\n//     useEffect(() => {\r\n//         setLike(love);\r\n//     }, [love])\r\n\r\n//     useEffect(() => {\r\n//         setDislike(hate);\r\n//     }, [hate])\r\n\r\n\r\n//     const handleLike = () => {\r\n//         // 1. 아무것도 눌려져있지 않다면 좋아요 1 올리기\r\n//         if (!isLiked && !isDisliked) {\r\n//             setLike(like + 1)\r\n//             setIsLiked(true)\r\n//         }\r\n//         // 2. 좋아요 버튼이 이미 클릭 되어있다면 좋아요 1 내리기\r\n//         else if (isLiked) {\r\n//             setLike(like - 1)\r\n//             setIsLiked(false)\r\n//         }\r\n//         // 3. 싫어요 버튼이 이미 클릭 되어있다면 좋아요 1 올리고 싫어요 1 내리기\r\n//         else if (isDisliked) {\r\n//             setLike(like + 1)\r\n//             setIsLiked(true)\r\n//             setDislike(dislike - 1)\r\n//             setIsDisliked(false)\r\n//         }\r\n//     }\r\n\r\n//     const handleDislike = () => {\r\n//         // 1. 아무것도 클릭되어있지 않다면 싫어요 1 올리기\r\n//         if (!isLiked && !isDisliked) {\r\n//             setDislike(dislike + 1)\r\n//             setIsDisliked(true)\r\n//         }\r\n//         // 2. 싫어요 버튼이 이미 클릭되어있다면 싫어요 1 내리기\r\n//         else if (isDisliked) {\r\n//             setDislike(dislike - 1)\r\n//             setIsDisliked(false)\r\n//         }\r\n//         // 3. 좋아요 버튼이 이미 클릭 되어있다면 싫어요 1 올리기 좋아요 1 내리기\r\n//         else if (isLiked) {\r\n//             setDislike(dislike + 1)\r\n//             setIsDisliked(true)\r\n//             setLike(like - 1)\r\n//             setIsLiked(false)\r\n//         }\r\n//     }\r\n\r\n//     useEffect(() => {\r\n\r\n//         fetch(`http://192.168.56.1:8080/movie/love/${reviewId}`, {\r\n//             method: 'POST',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json'\r\n//             },\r\n//             body: JSON.stringify({\r\n//                 love: isLiked ? 1 : -1  // 좋아요 상태에 따라 1 또는 -1 전달\r\n//             })\r\n//         })\r\n//             .then((res) => {\r\n//                 // 응답 상태가 성공적이면 JSON으로 파싱\r\n//                 if (!res.ok) {\r\n//                     throw new Error('Network response was not ok');\r\n//                 }\r\n//                 return res.json();\r\n//             })\r\n//             .then((data) => {\r\n//                 console.log(\"서버 응답:\", data); // 서버의 응답 내용 확인\r\n//             })\r\n//             .catch((err) => console.error(err));\r\n\r\n//     }, [like])\r\n\r\n//     useEffect(() => {\r\n\r\n//         fetch(`http://192.168.56.1:8080/movie/hate/${reviewId}`, {\r\n//             method: 'POST',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json'\r\n//             },\r\n//             body: JSON.stringify({\r\n//                 hate: isDisliked ? 1 : -1  // 좋아요 상태에 따라 1 또는 -1 전달\r\n//             })\r\n//         })\r\n//             .then((res) => {\r\n//                 // 응답 상태가 성공적이면 JSON으로 파싱\r\n//                 if (!res.ok) {\r\n//                     throw new Error('Network response was not ok');\r\n//                 }\r\n//                 return res.json();\r\n//             })\r\n//             .then((data) => {\r\n//                 console.log(\"서버 응답:\", data); // 서버의 응답 내용 확인\r\n//             })\r\n//             .catch((err) => console.error(err));\r\n\r\n//     }, [dislike])\r\n\r\n//     return (\r\n//         <div>\r\n//             <button onClick={handleLike} className='text-white'>\r\n//                 좋아요 {like}\r\n//             </button>\r\n\r\n//             <button onClick={handleDislike} className='text-white'>\r\n//                 싫어요 {dislike}\r\n//             </button>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n\r\n// export default function LikeDislikeFunc({ reviewId, love, hate }) {\r\n//   // 좋아요 갯수 담을 변수\r\n//   const [like, setLike] = useState(love);\r\n//   // 싫어요 갯수 담을 변수\r\n//   const [dislike, setDislike] = useState(hate);\r\n//   // 좋아요 상태 변수 : 처음에는 좋아요 되어있지 않음\r\n//   const [isLiked, setIsLiked] = useState(false);\r\n//   // 싫어요 상태 변수 : 처음에는 싫어요 되어있지 않음\r\n//   const [isDisliked, setIsDisliked] = useState(false);\r\n\r\n//   const handleLike = () => {\r\n//     // 1. 아무것도 눌려져있지 않다면 좋아요 1 올리기\r\n//     if (!isLiked && !isDisliked) {\r\n//       setLike((prev) => prev + 1);\r\n//       setIsLiked(true);\r\n//     }\r\n//     // 2. 좋아요 버튼이 이미 클릭 되어있다면 좋아요 1 내리기\r\n//     else if (isLiked) {\r\n//       setLike((prev) => prev - 1);\r\n//       setIsLiked(false);\r\n//     }\r\n//     // 3. 싫어요 버튼이 이미 클릭 되어있다면 좋아요 1 올리고 싫어요 1 내리기\r\n//     else if (isDisliked) {\r\n//       setLike((prev) => prev + 1);\r\n//       setIsLiked(true);\r\n//       setDislike((prev) => prev - 1);\r\n//       setIsDisliked(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleDislike = () => {\r\n//     // 1. 아무것도 클릭되어있지 않다면 싫어요 1 올리기\r\n//     if (!isLiked && !isDisliked) {\r\n//       setDislike((prev) => prev + 1);\r\n//       setIsDisliked(true);\r\n//     }\r\n//     // 2. 싫어요 버튼이 이미 클릭되어있다면 싫어요 1 내리기\r\n//     else if (isDisliked) {\r\n//       setDislike((prev) => prev - 1);\r\n//       setIsDisliked(false);\r\n//     }\r\n//     // 3. 좋아요 버튼이 이미 클릭 되어있다면 싫어요 1 올리기 좋아요 1 내리기\r\n//     else if (isLiked) {\r\n//       setDislike((prev) => prev + 1);\r\n//       setIsDisliked(true);\r\n//       setLike((prev) => prev - 1);\r\n//       setIsLiked(false);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (isLiked !== null) {\r\n//       fetch(`http://192.168.56.1:8080/movie/love/${reviewId}`, {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify({\r\n//           love: isLiked ? 1 : -1,\r\n//         }),\r\n//       })\r\n//         .then((res) => {\r\n//           if (!res.ok) {\r\n//             throw new Error('Network response was not ok');\r\n//           }\r\n//           return res.json();\r\n//         })\r\n//         .then((data) => {\r\n//           console.log('서버 응답:', data);\r\n//           // 서버 응답의 값과 동기화\r\n//           setLike(data.love);\r\n//           setDislike(data.hate)\r\n//         })\r\n//         .catch((err) => console.error(err));\r\n//     }\r\n//   }, [isLiked, reviewId]);\r\n\r\n//   useEffect(() => {\r\n//     if (isDisliked !== null) {\r\n//       fetch(`http://192.168.56.1:8080/movie/hate/${reviewId}`, {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify({\r\n//           hate: isDisliked ? 1 : -1,\r\n//         }),\r\n//       })\r\n//         .then((res) => {\r\n//           if (!res.ok) {\r\n//             throw new Error('Network response was not ok');\r\n//           }\r\n//           return res.json();\r\n//         })\r\n//         .then((data) => {\r\n//           console.log('서버 응답:', data);\r\n//           // 서버 응답의 값과 동기화\r\n//           setDislike(data.hate);\r\n//           setLike(data.love)\r\n//         })\r\n//         .catch((err) => console.error(err));\r\n//     }\r\n//   }, [isDisliked, reviewId]);\r\n\r\n\r\n//   return (\r\n//     <div>\r\n//       <button onClick={handleLike} className=\"text-white\">\r\n//         좋아요 {like}\r\n//       </button>\r\n\r\n//       <button onClick={handleDislike} className=\"text-white\">\r\n//         싫어요 {dislike}\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n\r\n// export default function LikeDislikeFunc({ reviewId, love, hate }) {\r\n//   const [like, setLike] = useState(love);\r\n//   const [dislike, setDislike] = useState(hate);\r\n// //   const [isLiked, setIsLiked] = useState(false);\r\n// //   const [isDisliked, setIsDisliked] = useState(false);   \r\n//   const [isLiked, setIsLiked] = useState(love > 0);\r\n//   const [isDisliked, setIsDisliked] = useState(hate > 0);\r\n\r\n//   useEffect(() => {\r\n//     if (isLiked !== null) {\r\n//         fetch(`http://192.168.56.1:8080/movie/love/${reviewId}`, {\r\n//             method: 'POST',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json',\r\n//             },\r\n//             body: JSON.stringify({\r\n//                 love: isLiked ? 1 : -1,\r\n//             }),\r\n//         })\r\n//             .then((res) => {\r\n//                 if (!res.ok) {\r\n//                     throw new Error('Network response was not ok');\r\n//                 }\r\n//                 return res.json();\r\n//             })\r\n//             .then((data) => {\r\n//                 console.log('서버 응답:', data);\r\n//                 // 서버 응답의 값과 동기화\r\n//                 setLike(data.love);\r\n//                 setDislike(data.hate);\r\n//             })\r\n//             .catch((err) => console.error(err));\r\n//     }\r\n// }, [isLiked]);\r\n\r\n// useEffect(() => {\r\n//     if (isDisliked !== null) {\r\n//         fetch(`http://192.168.56.1:8080/movie/hate/${reviewId}`, {\r\n//             method: 'POST',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json',\r\n//             },\r\n//             body: JSON.stringify({\r\n//                 hate: isDisliked ? 1 : -1,\r\n//             }),\r\n//         })\r\n//             .then((res) => {\r\n//                 if (!res.ok) {\r\n//                     throw new Error('Network response was not ok');\r\n//                 }\r\n//                 return res.json();\r\n//             })\r\n//             .then((data) => {\r\n//                 console.log('서버 응답:', data);\r\n//                 // 서버 응답의 값과 동기화\r\n//                 setDislike(data.hate);\r\n//                 setLike(data.love);\r\n//             })\r\n//             .catch((err) => console.error(err));\r\n//     }\r\n// }, [isDisliked, reviewId]);\r\n\r\n//   const handleLike = () => {\r\n//     // 1. 아무것도 눌려져있지 않다면 좋아요 1 올리기\r\n//     if (!isLiked && !isDisliked) {\r\n//         setLike((prev) => prev + 1);\r\n//         setIsLiked(true);\r\n//     }\r\n//     // 2. 좋아요 버튼이 이미 클릭 되어있다면 좋아요 1 내리기\r\n//     else if (isLiked) {\r\n//         setLike((prev) => prev - 1);\r\n//         setIsLiked(false);\r\n//     }\r\n//     // 3. 싫어요 버튼이 이미 클릭 되어있다면 좋아요 1 올리고 싫어요 1 내리기\r\n//     else if (isDisliked) {\r\n//         setLike((prev) => prev + 1);\r\n//         setIsLiked(true);\r\n//         setDislike((prev) => prev - 1);\r\n//         setIsDisliked(false);\r\n//     }\r\n// };\r\n\r\n// const handleDislike = () => {\r\n//     // 1. 아무것도 클릭되어있지 않다면 싫어요 1 올리기\r\n//     if (!isLiked && !isDisliked) {\r\n//         setDislike((prev) => prev + 1);\r\n//         setIsDisliked(true);\r\n//     }\r\n//     // 2. 싫어요 버튼이 이미 클릭되어있다면 싫어요 1 내리기\r\n//     else if (isDisliked) {\r\n//         setDislike((prev) => prev - 1);\r\n//         setIsDisliked(false);\r\n//     }\r\n//     // 3. 좋아요 버튼이 이미 클릭 되어있다면 싫어요 1 올리고 좋아요 1 내리기\r\n//     else if (isLiked) {\r\n//         setDislike((prev) => prev + 1);\r\n//         setIsDisliked(true);\r\n//         setLike((prev) => prev - 1);\r\n//         setIsLiked(false);\r\n//     }\r\n// };\r\n\r\n\r\n\r\n\r\n//   return (\r\n//     <div>\r\n//       <button onClick={handleLike} className=\"text-white\">\r\n//         좋아요 {like}\r\n//       </button>\r\n\r\n//       <button onClick={handleDislike} className=\"text-white\">\r\n//         싫어요 {dislike}\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nexport default function LikeDislikeFunc({ reviewId, love, hate }) {\r\n\r\n    const [like, setLike] = useState(love);\r\n    const [dislike, setDislike] = useState(hate);\r\n    const [isLiked, setIsLiked] = useState(love > 0);\r\n    const [isDisliked, setIsDisliked] = useState(hate > 0);\r\n    const [isLoading, setIsLoading] = useState(false); // 로딩 상태 추가\r\n\r\n    // props가 변경될 때마다 상태를 업데이트\r\n    useEffect(() => {\r\n        console.log(\"상태값\", isLiked, isDisliked)\r\n\r\n        setLike(love);\r\n        setDislike(hate);\r\n        setIsLiked(love > 0);\r\n        setIsDisliked(hate > 0);\r\n    }, [reviewId, love, hate, isLiked, isDisliked]);\r\n\r\n\r\n\r\n\r\n    const handleLike = async () => {\r\n        if (isLoading) return; // 로딩 중일 경우 함수 종료\r\n\r\n        setIsLoading(true); // 요청 시작\r\n        try {\r\n            if (!isLiked && !isDisliked) {\r\n                setLike((prev) => prev + 1);\r\n                setIsLiked(true);\r\n                await fetchLoveUpdate(1); // 서버에 좋아요 추가 요청\r\n            } else if (isLiked) {\r\n                setLike((prev) => prev - 1);\r\n                setIsLiked(false);\r\n                await fetchLoveUpdate(-1); // 서버에 좋아요 취소 요청\r\n            } else if (isDisliked) {\r\n                setLike((prev) => prev + 1);\r\n                setIsLiked(true);\r\n                setDislike((prev) => prev - 1);\r\n                setIsDisliked(false);\r\n                await fetchLoveUpdate(1); // 서버에 좋아요 추가\r\n                await fetchHateUpdate(-1); // 서버에 싫어요 취소 요청\r\n            }\r\n        } catch (error) {\r\n            console.error('좋아요 요청 오류:', error);\r\n        } finally {\r\n            setIsLoading(false); // 요청 완료\r\n        }\r\n    };\r\n\r\n    const handleDislike = async () => {\r\n        if (isLoading) return; // 로딩 중일 경우 함수 종료\r\n\r\n        setIsLoading(true); // 요청 시작\r\n        try {\r\n            if (!isLiked && !isDisliked) {\r\n                setDislike((prev) => prev + 1);\r\n                setIsDisliked(true);\r\n                await fetchHateUpdate(1); // 서버에 싫어요 추가 요청\r\n            } else if (isDisliked) {\r\n                setDislike((prev) => prev - 1);\r\n                setIsDisliked(false);\r\n                await fetchHateUpdate(-1); // 서버에 싫어요 취소 요청\r\n            } else if (isLiked) {\r\n                setDislike((prev) => prev + 1);\r\n                setIsDisliked(true);\r\n                setLike((prev) => prev - 1);\r\n                setIsLiked(false);\r\n                await fetchHateUpdate(1); // 서버에 싫어요 추가\r\n                await fetchLoveUpdate(-1); // 서버에 좋아요 취소 요청\r\n            }\r\n        } catch (error) {\r\n            console.error('싫어요 요청 오류:', error);\r\n        } finally {\r\n            setIsLoading(false); // 요청 완료\r\n        }\r\n    };\r\n\r\n    const fetchLoveUpdate = async (action) => {\r\n        const response = await fetch(`http://192.168.56.1:8080/movie/love/${reviewId}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                love: action,\r\n            }),\r\n        });\r\n        return handleResponse(response);\r\n    };\r\n\r\n    const fetchHateUpdate = async (action) => {\r\n        const response = await fetch(`http://192.168.56.1:8080/movie/hate/${reviewId}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                hate: action,\r\n            }),\r\n        });\r\n        return handleResponse(response);\r\n    };\r\n\r\n    const handleResponse = async (res) => {\r\n        if (!res.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n        const data = await res.json();\r\n        console.log('서버 응답:', data);\r\n\r\n        // 서버에서 반환된 값을 상태에 업데이트\r\n        setLike(data.love);\r\n        setDislike(data.hate);\r\n\r\n        // 새로고침 시 상태 업데이트\r\n        setIsLiked(data.love > 0);\r\n        setIsDisliked(data.hate > 0);\r\n\r\n        return data\r\n    };\r\n\r\n    return (\r\n        // <div>\r\n        //     <button onClick={handleLike} className=\"text-white\" disabled={isLoading}>\r\n        //         좋아요 {like}\r\n        //     </button>\r\n\r\n        //     <button onClick={handleDislike} className=\"text-white\" disabled={isLoading}>\r\n        //         싫어요 {dislike}\r\n        //     </button>\r\n        // </div>\r\n\r\n        <div className='flex justify-end items-center'>\r\n            {like !== null && (\r\n                <button onClick={handleLike} className='flex items-center mr-2' disabled={isLoading}>\r\n                    {isLiked ?\r\n                        <svg className='fill-white w-6 h-6' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n                            <path d=\"M313.4 32.9c26 5.2 42.9 30.5 37.7 56.5l-2.3 11.4c-5.3 26.7-15.1 52.1-28.8 75.2l144 0c26.5 0 48 21.5 48 48c0 18.5-10.5 34.6-25.9 42.6C497 275.4 504 288.9 504 304c0 23.4-16.8 42.9-38.9 47.1c4.4 7.3 6.9 15.8 6.9 24.9c0 21.3-13.9 39.4-33.1 45.6c.7 3.3 1.1 6.8 1.1 10.4c0 26.5-21.5 48-48 48l-97.5 0c-19 0-37.5-5.6-53.3-16.1l-38.5-25.7C176 420.4 160 390.4 160 358.3l0-38.3 0-48 0-24.9c0-29.2 13.3-56.7 36-75l7.4-5.9c26.5-21.2 44.6-51 51.2-84.2l2.3-11.4c5.2-26 30.5-42.9 56.5-37.7zM32 192l64 0c17.7 0 32 14.3 32 32l0 224c0 17.7-14.3 32-32 32l-64 0c-17.7 0-32-14.3-32-32L0 224c0-17.7 14.3-32 32-32z\" />\r\n                        </svg>\r\n                        :\r\n                        <svg className='fill-white w-6 h-6' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n                            <path d=\"M323.8 34.8c-38.2-10.9-78.1 11.2-89 49.4l-5.7 20c-3.7 13-10.4 25-19.5 35l-51.3 56.4c-8.9 9.8-8.2 25 1.6 33.9s25 8.2 33.9-1.6l51.3-56.4c14.1-15.5 24.4-34 30.1-54.1l5.7-20c3.6-12.7 16.9-20.1 29.7-16.5s20.1 16.9 16.5 29.7l-5.7 20c-5.7 19.9-14.7 38.7-26.6 55.5c-5.2 7.3-5.8 16.9-1.7 24.9s12.3 13 21.3 13L448 224c8.8 0 16 7.2 16 16c0 6.8-4.3 12.7-10.4 15c-7.4 2.8-13 9-14.9 16.7s.1 15.8 5.3 21.7c2.5 2.8 4 6.5 4 10.6c0 7.8-5.6 14.3-13 15.7c-8.2 1.6-15.1 7.3-18 15.2s-1.6 16.7 3.6 23.3c2.1 2.7 3.4 6.1 3.4 9.9c0 6.7-4.2 12.6-10.2 14.9c-11.5 4.5-17.7 16.9-14.4 28.8c.4 1.3 .6 2.8 .6 4.3c0 8.8-7.2 16-16 16l-97.5 0c-12.6 0-25-3.7-35.5-10.7l-61.7-41.1c-11-7.4-25.9-4.4-33.3 6.7s-4.4 25.9 6.7 33.3l61.7 41.1c18.4 12.3 40 18.8 62.1 18.8l97.5 0c34.7 0 62.9-27.6 64-62c14.6-11.7 24-29.7 24-50c0-4.5-.5-8.8-1.3-13c15.4-11.7 25.3-30.2 25.3-51c0-6.5-1-12.8-2.8-18.7C504.8 273.7 512 257.7 512 240c0-35.3-28.6-64-64-64l-92.3 0c4.7-10.4 8.7-21.2 11.8-32.2l5.7-20c10.9-38.2-11.2-78.1-49.4-89zM32 192c-17.7 0-32 14.3-32 32L0 448c0 17.7 14.3 32 32 32l64 0c17.7 0 32-14.3 32-32l0-224c0-17.7-14.3-32-32-32l-64 0z\" />\r\n                        </svg>\r\n                    }\r\n                    <div className='text-white m-2'> 좋아요 {like} </div>\r\n                </button>\r\n            )}\r\n            {dislike !== null && (\r\n                <button onClick={handleDislike} className='flex items-center' disabled={isLoading}>\r\n                    {isDisliked ?\r\n                        <svg className='fill-white w-6 h-6' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n                            <path d=\"M313.4 479.1c26-5.2 42.9-30.5 37.7-56.5l-2.3-11.4c-5.3-26.7-15.1-52.1-28.8-75.2l144 0c26.5 0 48-21.5 48-48c0-18.5-10.5-34.6-25.9-42.6C497 236.6 504 223.1 504 208c0-23.4-16.8-42.9-38.9-47.1c4.4-7.3 6.9-15.8 6.9-24.9c0-21.3-13.9-39.4-33.1-45.6c.7-3.3 1.1-6.8 1.1-10.4c0-26.5-21.5-48-48-48l-97.5 0c-19 0-37.5 5.6-53.3 16.1L202.7 73.8C176 91.6 160 121.6 160 153.7l0 38.3 0 48 0 24.9c0 29.2 13.3 56.7 36 75l7.4 5.9c26.5 21.2 44.6 51 51.2 84.2l2.3 11.4c5.2 26 30.5 42.9 56.5 37.7zM32 384l64 0c17.7 0 32-14.3 32-32l0-224c0-17.7-14.3-32-32-32L32 96C14.3 96 0 110.3 0 128L0 352c0 17.7 14.3 32 32 32z\" />\r\n                        </svg>\r\n                        : <svg className='fill-white w-6 h-6' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n                            <path d=\"M323.8 477.2c-38.2 10.9-78.1-11.2-89-49.4l-5.7-20c-3.7-13-10.4-25-19.5-35l-51.3-56.4c-8.9-9.8-8.2-25 1.6-33.9s25-8.2 33.9 1.6l51.3 56.4c14.1 15.5 24.4 34 30.1 54.1l5.7 20c3.6 12.7 16.9 20.1 29.7 16.5s20.1-16.9 16.5-29.7l-5.7-20c-5.7-19.9-14.7-38.7-26.6-55.5c-5.2-7.3-5.8-16.9-1.7-24.9s12.3-13 21.3-13L448 288c8.8 0 16-7.2 16-16c0-6.8-4.3-12.7-10.4-15c-7.4-2.8-13-9-14.9-16.7s.1-15.8 5.3-21.7c2.5-2.8 4-6.5 4-10.6c0-7.8-5.6-14.3-13-15.7c-8.2-1.6-15.1-7.3-18-15.2s-1.6-16.7 3.6-23.3c2.1-2.7 3.4-6.1 3.4-9.9c0-6.7-4.2-12.6-10.2-14.9c-11.5-4.5-17.7-16.9-14.4-28.8c.4-1.3 .6-2.8 .6-4.3c0-8.8-7.2-16-16-16l-97.5 0c-12.6 0-25 3.7-35.5 10.7l-61.7 41.1c-11 7.4-25.9 4.4-33.3-6.7s-4.4-25.9 6.7-33.3l61.7-41.1c18.4-12.3 40-18.8 62.1-18.8L384 32c34.7 0 62.9 27.6 64 62c14.6 11.7 24 29.7 24 50c0 4.5-.5 8.8-1.3 13c15.4 11.7 25.3 30.2 25.3 51c0 6.5-1 12.8-2.8 18.7C504.8 238.3 512 254.3 512 272c0 35.3-28.6 64-64 64l-92.3 0c4.7 10.4 8.7 21.2 11.8 32.2l5.7 20c10.9 38.2-11.2 78.1-49.4 89zM32 384c-17.7 0-32-14.3-32-32L0 128c0-17.7 14.3-32 32-32l64 0c17.7 0 32 14.3 32 32l0 224c0 17.7-14.3 32-32 32l-64 0z\" />\r\n                        </svg>\r\n                    }\r\n                    <div className='text-white ml-2'> 싫어요 {dislike} </div>\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n"],"mappings":";;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAC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"},"metadata":{},"sourceType":"module","externalDependencies":[]}