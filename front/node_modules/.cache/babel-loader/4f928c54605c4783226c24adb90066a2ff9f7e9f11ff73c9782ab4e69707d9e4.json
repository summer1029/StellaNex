{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\Desktop\\\\stellanex_graduation\\\\src\\\\Component\\\\MovieInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport FindMovieData from \"./FindMovieData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MovieInfo() {\n  _s();\n  const param = useParams().index;\n  console.log(\"Movie id : \", param);\n  const id = param;\n  const movieInfo = FindMovieData(id);\n  console.log(\"???? : \", movieInfo);\n  console.log(\"제목 : \", movieInfo.title);\n  console.log(\"원제목 : \", movieInfo.origine_title);\n  console.log(\"부제목 : \", movieInfo.tagline);\n  console.log(\"개봉일 : \", movieInfo.release_date);\n  console.log(\"시놉시스 : \", movieInfo.overview);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-black h-full w-full\",\n    children: movieInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-10 flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w500/${movieInfo.backdrop_path}`,\n          className: \"w-full mb-10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-3xl font-extrabold mb-3 text-white\",\n            children: movieInfo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-2xl font-extrabold mb-3 text-white\",\n            children: movieInfo.original_title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xl font-extrabold mb-3 text-white\",\n            children: movieInfo.tagline\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-lg font-medium text-white\",\n            children: [\"\\uAC1C\\uBD09\\uC77C: \", movieInfo.release_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-lg font-medium text-white\",\n            children: [\"\\uC0C1\\uC601\\uC2DC\\uAC04: \", movieInfo.runtime, \"\\uBD84\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-lg font-medium text-white\",\n            children: [\"\\uBD80\\uC801\\uC808 \\uB4F1\\uAE09: \", movieInfo.adult ? \"청소년 관람 불가\" : \"청소년 관람 가능\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-lg font-medium text-white\",\n            children: [\"\\uC7A5\\uB974: \", movieInfo.genres && movieInfo.genres.map(genre => genre.name).join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-lg font-medium text-white\",\n            children: [\"\\uC2DC\\uB189\\uC2DC\\uC2A4: \", movieInfo.overview]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this)\n  // <></>\n  ;\n}\n_s(MovieInfo, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n  return [useParams];\n});\n_c = MovieInfo;\nvar _c;\n$RefreshReg$(_c, \"MovieInfo\");","map":{"version":3,"names":["React","useEffect","useState","useParams","FindMovieData","jsxDEV","_jsxDEV","MovieInfo","_s","param","index","console","log","id","movieInfo","title","origine_title","tagline","release_date","overview","className","children","src","backdrop_path","fileName","_jsxFileName","lineNumber","columnNumber","original_title","runtime","adult","genres","map","genre","name","join","_c","$RefreshReg$"],"sources":["C:/Users/Samsung/Desktop/stellanex_graduation/src/Component/MovieInfo.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport FindMovieData from \"./FindMovieData\";\r\n\r\nexport default function MovieInfo() {\r\n\r\n  const param = useParams().index;\r\n  console.log(\"Movie id : \", param)\r\n\r\n  const id = param\r\n  const movieInfo = FindMovieData(id);\r\n\r\n  console.log(\"???? : \", movieInfo)\r\n  console.log(\"제목 : \", movieInfo.title)\r\n  console.log(\"원제목 : \", movieInfo.origine_title)\r\n  console.log(\"부제목 : \", movieInfo.tagline)\r\n  console.log(\"개봉일 : \", movieInfo.release_date)\r\n  console.log(\"시놉시스 : \", movieInfo.overview)\r\n\r\n\r\n  return (\r\n    <div className=\"bg-black h-full w-full\">\r\n      {movieInfo && (\r\n        <div>\r\n          <div className=\"p-10 flex-col\">\r\n          <img\r\n              src={`https://image.tmdb.org/t/p/w500/${movieInfo.backdrop_path}`}\r\n              className=\"w-full mb-10\"\r\n          />\r\n            {/* <img src={posterImage[param]} alt=\"Movie Poster\" className=\"w-72 mb-5\" /> */}\r\n            <div className=\"ml-5\">\r\n              <div className=\"text-3xl font-extrabold mb-3 text-white\">\r\n                {movieInfo.title}\r\n              </div>\r\n              <div className=\"text-2xl font-extrabold mb-3 text-white\">\r\n                {movieInfo.original_title}\r\n              </div>\r\n              <div className=\"text-xl font-extrabold mb-3 text-white\">\r\n                {movieInfo.tagline}\r\n              </div>\r\n              <div className=\"text-lg font-medium text-white\">\r\n                개봉일: {movieInfo.release_date}\r\n              </div>\r\n              <div className=\"text-lg font-medium text-white\">\r\n                상영시간: {movieInfo.runtime}분\r\n              </div>\r\n              <div className=\"text-lg font-medium text-white\">\r\n              부적절 등급: {movieInfo.adult ? \"청소년 관람 불가\" : \"청소년 관람 가능\"}\r\n              </div>\r\n              <div className=\"text-lg font-medium text-white\">\r\n              장르: {movieInfo.genres && movieInfo.genres.map(genre => genre.name).join(', ')}\r\n              </div>\r\n              <div className=\"text-lg font-medium text-white\">\r\n                시놉시스: {movieInfo.overview}\r\n              </div>\r\n              {/* <div className=\"text-lg font-medium text-white\">\r\n                감독: {dbData.director}\r\n              </div>\r\n              <div className=\"text-lg font-medium text-white\">\r\n                출연진: {dbData.casts}\r\n              </div> */}\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"flex justify-end items-center text-white mb-3 mr-12\">\r\n            리뷰 등록 모달\r\n            <React.Fragment>\r\n              <Button variant=\"outlined\" onClick={(e) => handleClickOpenInsert(e)}\r\n                style={{\r\n                  backgroundColor: red[400], // 300하면 비슷한데 음 몰라\r\n                  fontWeight: \"bold\",\r\n                  color: \"white\",\r\n                  borderColor: red[400],\r\n                  marginRight: \"5px\",\r\n                }}>\r\n                등록\r\n              </Button>\r\n              <Dialog open={openInsert} onClose={handleClose}>\r\n                <DialogTitle>등록</DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText>\r\n                    등록할 내용을 작성해주세요\r\n                  </DialogContentText>\r\n                  <TextField\r\n                    disabled\r\n                    id=\"email\"\r\n                    label=\"Email\"\r\n                    defaultValue={localStorage.getItem(\"userId\")}\r\n                    variant=\"standard\"\r\n                    fullWidth\r\n                  />\r\n                  <TextField\r\n                    onChange={handleContent}\r\n                    autoFocus\r\n                    required\r\n                    margin=\"dense\"\r\n                    id=\"content\"\r\n                    name=\"content\"\r\n                    label=\"새로운 내용\"\r\n                    type=\"text\"\r\n                    fullWidth\r\n                    variant=\"standard\"\r\n                  />\r\n                  <TextField\r\n                    onChange={handleGrade}\r\n                    autoFocus\r\n                    required\r\n                    margin=\"dense\"\r\n                    id=\"grade\"\r\n                    name=\"grade\"\r\n                    label=\"새로운 등급\"\r\n                    type=\"number\"\r\n                    fullWidth\r\n                    variant=\"standard\"\r\n                  />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleClose}>취소</Button>\r\n                  <Button onClick={handleInsert}>등록</Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </React.Fragment>\r\n          </div> */}\r\n          {/* <div className=\"flex justify-end m-3\">\r\n            리뷰 정렬 버튼\r\n            <button\r\n              variant=\"outlined\"\r\n              className=\"hover:underline text-white px-4 py-2 rounded-md mr-2\"\r\n              onClick={() => {\r\n                // setSortBy(sortBy === \"grade\" ? \"date\" : \"grade\")\r\n                setSortBy(\"grade\")\r\n                setOrderBy(orderBy === \"asc\" ? \"desc\" : \"asc\");\r\n                // handleSortReviews(orderBy === \"asc\" ? \"desc\" : \"asc\");\r\n              }}>\r\n              {orderBy === \"asc\" ? \"▼ 등급 낮은 순\" : \"▲ 등급 높은 순\"}\r\n            </button>\r\n            <button\r\n              variant=\"outlined\"\r\n              className=\"hover:underline text-white px-4 py-2 rounded-md mr-5\"\r\n              onClick={() => {\r\n                // setSortBy(sortBy === \"date\" ? \"grade\" : \"date\")\r\n                setSortBy(\"date\")\r\n                setOrderBy(orderBy === \"asc\" ? \"desc\" : \"asc\");\r\n              }}>\r\n              {orderBy === \"asc\" ? \"▼ 오래된 순\" : \"▲ 최신 순\"}\r\n            </button>\r\n          </div> */}\r\n          {/* <div className=\"pl-10 pr-10 pb-10\">\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\r\n              {dbReview.map((rv, idx) => (\r\n                <div key={idx} className=\"bg-gray-800 rounded-lg overflow-hidden\">\r\n                  <div className=\"p-4\">\r\n                    <div className=\"flex items-center mb-2\">\r\n                      <svg className=\"fill-white h-10 w-10 mr-3\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\r\n                        <path d=\"M224 256A128 128 0 1 0 224 0a128 128 0 1 0 0 256zm-45.7 48C79.8 304 0 383.8 0 482.3C0 498.7 13.3 512 29.7 512H418.3c16.4 0 29.7-13.3 29.7-29.7C448 383.8 368.2 304 269.7 304H178.3z\" />\r\n                      </svg>\r\n                      <div className=\"flex w-full content-between\">\r\n                        <div className=\"text-lg font-medium text-white\">\r\n                          {getWriterId(rv.writer)}\r\n                        </div>\r\n                      </div>\r\n                      <div\r\n                        className=\"text-2xl font-bold text-center text-white mb-2\"\r\n                        style={{ whiteSpace: \"nowrap\" }}>\r\n                        {Array.from({ length: 5 }, (_, index) => (\r\n                          <StarIcon\r\n                            key={index}\r\n                            sx={{ color: index < rv.grade ? \"#FFD700\" : \"gray\", fontSize: 24 }}\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-lg font-medium text-white mb-4\">\r\n                      {rv.content}\r\n                    </div>\r\n                    <div className=\"text-lg font-medium text-white mb-2\">\r\n                      {rv.date}\r\n                    </div>\r\n                    <div className=\"flex justify-end\">\r\n                      <div className=\"items-center text-white mt-1\">\r\n                        리뷰 수정 모달\r\n                        <React.Fragment>\r\n                          <Button\r\n                            review={rv}\r\n                            variant=\"outlined\"\r\n                            onClick={(e) => handleClickOpenUpdate(e, rv.review_id, rv.content, rv.grade)}\r\n                            style={{\r\n                              backgroundColor: red[400],\r\n                              fontWeight: \"bold\",\r\n                              color: \"white\",\r\n                              borderColor: red[400],\r\n                              marginRight: \"5px\",\r\n                            }}>\r\n                            수정\r\n                          </Button>\r\n                          <Dialog\r\n                            open={openModify}\r\n                            onClose={handleClose}>\r\n                            <DialogTitle>수정</DialogTitle>\r\n                            <DialogContent>\r\n                              <DialogContentText>\r\n                                수정할 내용을 작성해주세요\r\n                              </DialogContentText>\r\n                              <TextField\r\n                                onChange={handleGrade}\r\n                                autoFocus\r\n                                required\r\n                                margin=\"dense\"\r\n                                id=\"grade\"\r\n                                name=\"grade\"\r\n                                label=\"새로운 등급\"\r\n                                type=\"number\"\r\n                                fullWidth\r\n                                variant=\"standard\"\r\n                                defaultValue={selectedGrade}\r\n                              />\r\n                              <TextField\r\n                                onChange={handleContent}\r\n                                autoFocus\r\n                                required\r\n                                margin=\"dense\"\r\n                                id=\"content\"\r\n                                name=\"content\"\r\n                                label=\"새로운 내용\"\r\n                                type=\"text\"\r\n                                fullWidth\r\n                                variant=\"standard\"\r\n                                defaultValue={selectedContent}\r\n                              />\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                              <Button onClick={handleClose}>취소</Button>\r\n                              <Button onClick={(e) => handleUpdate(selectedReviewId)}>저장</Button>\r\n                            </DialogActions>\r\n                          </Dialog>\r\n                        </React.Fragment>\r\n                      </div>\r\n                      리뷰 삭제 모달\r\n                      <div className=\"items-center text-white mt-1\">\r\n                        <React.Fragment>\r\n                          <Button\r\n                            review={rv}\r\n                            variant=\"outlined\"\r\n                            onClick={(e) => handleClickOpenDelete(e, rv.review_id)}\r\n                            style={{\r\n                              backgroundColor: red[400],\r\n                              fontWeight: \"bold\",\r\n                              color: \"white\",\r\n                              borderColor: red[400],\r\n                              marginRight: \"5px\",\r\n                            }}>\r\n                            삭제\r\n                          </Button>\r\n                          <Dialog\r\n                            open={openDelete}\r\n                            onClose={handleClose}\r\n                            aria-labelledby=\"alert-dialog-title\"\r\n                            aria-describedby=\"alert-dialog-description\"\r\n                          >\r\n                            <DialogTitle id=\"alert-dialog-title\">\r\n                              삭제\r\n                            </DialogTitle>\r\n                            <DialogContent>\r\n                              <DialogContentText id=\"alert-dialog-description\">\r\n                                해당 리뷰를 삭제하시겠습니까?\r\n                              </DialogContentText>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                              <Button onClick={(e) => handleDelete(selectedDeleteId)}>\r\n                                삭제\r\n                              </Button>\r\n                              <Button onClick={handleClose} autoFocus>\r\n                                취소\r\n                              </Button>\r\n                            </DialogActions>\r\n                          </Dialog>\r\n                        </React.Fragment>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div> */}\r\n        </div>\r\n      )}\r\n    </div>\r\n    // <></>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAElC,MAAMC,KAAK,GAAGN,SAAS,CAAC,CAAC,CAACO,KAAK;EAC/BC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEH,KAAK,CAAC;EAEjC,MAAMI,EAAE,GAAGJ,KAAK;EAChB,MAAMK,SAAS,GAAGV,aAAa,CAACS,EAAE,CAAC;EAEnCF,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEE,SAAS,CAAC;EACjCH,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEE,SAAS,CAACC,KAAK,CAAC;EACrCJ,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEE,SAAS,CAACE,aAAa,CAAC;EAC9CL,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEE,SAAS,CAACG,OAAO,CAAC;EACxCN,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEE,SAAS,CAACI,YAAY,CAAC;EAC7CP,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEE,SAAS,CAACK,QAAQ,CAAC;EAG1C,oBACEb,OAAA;IAAKc,SAAS,EAAC,wBAAwB;IAAAC,QAAA,EACpCP,SAAS,iBACRR,OAAA;MAAAe,QAAA,eACEf,OAAA;QAAKc,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC9Bf,OAAA;UACIgB,GAAG,EAAG,mCAAkCR,SAAS,CAACS,aAAc,EAAE;UAClEH,SAAS,EAAC;QAAc;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC,eAEArB,OAAA;UAAKc,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBf,OAAA;YAAKc,SAAS,EAAC,yCAAyC;YAAAC,QAAA,EACrDP,SAAS,CAACC;UAAK;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACb,CAAC,eACNrB,OAAA;YAAKc,SAAS,EAAC,yCAAyC;YAAAC,QAAA,EACrDP,SAAS,CAACc;UAAc;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC,eACNrB,OAAA;YAAKc,SAAS,EAAC,wCAAwC;YAAAC,QAAA,EACpDP,SAAS,CAACG;UAAO;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf,CAAC,eACNrB,OAAA;YAAKc,SAAS,EAAC,gCAAgC;YAAAC,QAAA,GAAC,sBACzC,EAACP,SAAS,CAACI,YAAY;UAAA;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC,eACNrB,OAAA;YAAKc,SAAS,EAAC,gCAAgC;YAAAC,QAAA,GAAC,4BACxC,EAACP,SAAS,CAACe,OAAO,EAAC,QAC3B;UAAA;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNrB,OAAA;YAAKc,SAAS,EAAC,gCAAgC;YAAAC,QAAA,GAAC,mCACxC,EAACP,SAAS,CAACgB,KAAK,GAAG,WAAW,GAAG,WAAW;UAAA;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C,CAAC,eACNrB,OAAA;YAAKc,SAAS,EAAC,gCAAgC;YAAAC,QAAA,GAAC,gBAC5C,EAACP,SAAS,CAACiB,MAAM,IAAIjB,SAAS,CAACiB,MAAM,CAACC,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxE,CAAC,eACNrB,OAAA;YAAKc,SAAS,EAAC,gCAAgC;YAAAC,QAAA,GAAC,4BACxC,EAACP,SAAS,CAACK,QAAQ;UAAA;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA6NH;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE;EACL;EAAA;AAEJ;AAACnB,EAAA,CA5RuBD,SAAS;EAAA,QAEjBJ,SAAS;AAAA;AAAAiC,EAAA,GAFD7B,SAAS;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}