{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\Desktop\\\\stellanex_graduation\\\\src\\\\Component\\\\NowPlayingList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NowPlayingList() {\n  _s();\n  const [nowPlaying, setNowPlaying] = useState();\n  const [card, setCard] = useState();\n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyNGQwY2FkMGU1NDAyMzFkODQ1OTI1MjNhNzAxNzc1MyIsInN1YiI6IjY1YzA5NmVlYTM1YzhlMDE3Y2Q3ODE4YyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.WsPfi3MDkQ3R01A5_w0Cn43_P8_8cCQp7cRoYyylPsg'\n      }\n    };\n    fetch('https://api.themoviedb.org/3/movie/now_playing?language=ko-KR&page=1', options).then(response => response.json()).then(response => setNowPlaying(response.results)).catch(err => console.error(err));\n  }, []);\n  console.log(\"NowPlayingList\", nowPlaying);\n\n  // useEffect(() => {\n  //     let tm = nowPlaying && nowPlaying.map((item, index) => (\n  //         <div key={index} className=\"flex justify-center items-center w-1/11 m-5\">\n\n  //             {/* <Link to={`/movie/${index}`}>\n  //                 <img src={posterImage[index]} alt=\"Movie Poster\" className=\"w-44 mb-2\" />\n  //                 <div style={{overflow:'hidden', whiteSpace:'nowrap', textOverflow:'ellipsis', width:'176px', textAlign:'center', color:\"white\"}}>{item.movieNm}</div>\n  //             </Link> */}\n\n  //             <div className=\"flex-col justify-center items-center\">\n  //                 <img\n  //                     src={`https://image.tmdb.org/t/p/w500/${item.backdrop_path}`}\n  //                     alt={`Backdrop ${index}`}\n  //                     className=\"inline-block h-40 w-44 mb-2 rounded-lg m-2\"\n  //                 />\n  //                 <div style={{ overflow: 'hidden', whiteSpace: 'nowrap', textOverflow: 'ellipsis', width: '176px', textAlign: 'center', color: \"white\" }}>{item.title}</div>\n  //             </div>\n  //         </div>\n  //     ))\n  //     setCard(tm)\n\n  // }, [NowPlayingList]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-col w-4/5 bg-black\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-3xl font-appleB font-extrabold text-red-400\",\n      children: \"Now Playing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap justify-center items-center\",\n      children: nowPlaying && nowPlaying.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-col justify-center items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w500/${item.backdrop_path}`,\n          alt: `Backdrop ${index}`,\n          className: \"inline-block h-40 w-52 mb-2 m-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            width: '176px',\n            textAlign: 'center',\n            color: \"white\"\n          },\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 20\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(NowPlayingList, \"54kIlZsnPNMsqYohGuDzike7W9M=\");\n_c = NowPlayingList;\nvar _c;\n$RefreshReg$(_c, \"NowPlayingList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","NowPlayingList","_s","nowPlaying","setNowPlaying","card","setCard","options","method","headers","accept","Authorization","fetch","then","response","json","results","catch","err","console","error","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","src","backdrop_path","alt","style","overflow","whiteSpace","textOverflow","width","textAlign","color","title","_c","$RefreshReg$"],"sources":["C:/Users/Samsung/Desktop/stellanex_graduation/src/Component/NowPlayingList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nexport default function NowPlayingList() {\r\n    const [nowPlaying, setNowPlaying] = useState()\r\n    const [card, setCard] = useState()\r\n\r\n    useEffect(() => {\r\n        const options = {\r\n            method: 'GET',\r\n            headers: {\r\n                accept: 'application/json',\r\n                Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyNGQwY2FkMGU1NDAyMzFkODQ1OTI1MjNhNzAxNzc1MyIsInN1YiI6IjY1YzA5NmVlYTM1YzhlMDE3Y2Q3ODE4YyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.WsPfi3MDkQ3R01A5_w0Cn43_P8_8cCQp7cRoYyylPsg'\r\n            }\r\n        };\r\n\r\n        fetch('https://api.themoviedb.org/3/movie/now_playing?language=ko-KR&page=1', options)\r\n            .then(response => response.json())\r\n            .then(response => setNowPlaying(response.results))\r\n            .catch(err => console.error(err));\r\n    }, [])\r\n\r\n    console.log(\"NowPlayingList\", nowPlaying)\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     let tm = nowPlaying && nowPlaying.map((item, index) => (\r\n    //         <div key={index} className=\"flex justify-center items-center w-1/11 m-5\">\r\n\r\n    //             {/* <Link to={`/movie/${index}`}>\r\n    //                 <img src={posterImage[index]} alt=\"Movie Poster\" className=\"w-44 mb-2\" />\r\n    //                 <div style={{overflow:'hidden', whiteSpace:'nowrap', textOverflow:'ellipsis', width:'176px', textAlign:'center', color:\"white\"}}>{item.movieNm}</div>\r\n    //             </Link> */}\r\n\r\n    //             <div className=\"flex-col justify-center items-center\">\r\n    //                 <img\r\n    //                     src={`https://image.tmdb.org/t/p/w500/${item.backdrop_path}`}\r\n    //                     alt={`Backdrop ${index}`}\r\n    //                     className=\"inline-block h-40 w-44 mb-2 rounded-lg m-2\"\r\n    //                 />\r\n    //                 <div style={{ overflow: 'hidden', whiteSpace: 'nowrap', textOverflow: 'ellipsis', width: '176px', textAlign: 'center', color: \"white\" }}>{item.title}</div>\r\n    //             </div>\r\n    //         </div>\r\n    //     ))\r\n    //     setCard(tm)\r\n\r\n    // }, [NowPlayingList]);\r\n\r\n    return (\r\n        <div className='flex-col w-4/5 bg-black'>\r\n            <div className='text-center text-3xl font-appleB font-extrabold text-red-400'>Now Playing</div>\r\n\r\n            <div className=\"flex flex-wrap justify-center items-center\">\r\n                {nowPlaying && nowPlaying.map((item, index) => (\r\n                   <div className=\"flex-col justify-center items-center\">\r\n                   <img\r\n                       src={`https://image.tmdb.org/t/p/w500/${item.backdrop_path}`}\r\n                       alt={`Backdrop ${index}`}\r\n                       className=\"inline-block h-40 w-52 mb-2 m-2\"\r\n                   />\r\n                   <div style={{ overflow: 'hidden', whiteSpace: 'nowrap', textOverflow: 'ellipsis', width: '176px', textAlign: 'center', color: \"white\" }}>{item.title}</div>\r\n               </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,CAAC;EAC9C,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAElCD,SAAS,CAAC,MAAM;IACZ,MAAMU,OAAO,GAAG;MACZC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACLC,MAAM,EAAE,kBAAkB;QAC1BC,aAAa,EAAE;MACnB;IACJ,CAAC;IAEDC,KAAK,CAAC,sEAAsE,EAAEL,OAAO,CAAC,CACjFM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACC,QAAQ,IAAIV,aAAa,CAACU,QAAQ,CAACE,OAAO,CAAC,CAAC,CACjDC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAENC,OAAO,CAACE,GAAG,CAAC,gBAAgB,EAAElB,UAAU,CAAC;;EAOzC;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA,oBACIH,OAAA;IAAKsB,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACpCvB,OAAA;MAAKsB,SAAS,EAAC,8DAA8D;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAE/F3B,OAAA;MAAKsB,SAAS,EAAC,4CAA4C;MAAAC,QAAA,EACtDpB,UAAU,IAAIA,UAAU,CAACyB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACvC9B,OAAA;QAAKsB,SAAS,EAAC,sCAAsC;QAAAC,QAAA,gBACrDvB,OAAA;UACI+B,GAAG,EAAG,mCAAkCF,IAAI,CAACG,aAAc,EAAE;UAC7DC,GAAG,EAAG,YAAWH,KAAM,EAAE;UACzBR,SAAS,EAAC;QAAiC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC,eACF3B,OAAA;UAAKkC,KAAK,EAAE;YAAEC,QAAQ,EAAE,QAAQ;YAAEC,UAAU,EAAE,QAAQ;YAAEC,YAAY,EAAE,UAAU;YAAEC,KAAK,EAAE,OAAO;YAAEC,SAAS,EAAE,QAAQ;YAAEC,KAAK,EAAE;UAAQ,CAAE;UAAAjB,QAAA,EAAEM,IAAI,CAACY;QAAK;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1J,CACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACzB,EAAA,CAnEuBD,cAAc;AAAAyC,EAAA,GAAdzC,cAAc;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}