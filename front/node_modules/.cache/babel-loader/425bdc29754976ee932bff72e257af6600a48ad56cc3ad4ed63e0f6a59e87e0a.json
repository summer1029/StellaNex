{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { userEmail } from \"./AtomSt\";\nimport { useRecoilState } from \"recoil\";\nimport movie1 from \"../assets/poster/wonka.jpg\";\nimport movie2 from \"../assets/poster/gungook.jpg\";\nimport movie3 from \"../assets/poster/qukal.jpg\";\nimport movie4 from \"../assets/poster/simin.jpg\";\nimport movie5 from \"../assets/poster/sopung.jpg\";\nimport movie6 from \"../assets/poster/dogdys.jpg\";\nimport movie7 from \"../assets/poster/deadman.jpg\";\nimport movie8 from \"../assets/poster/agail.jpg\";\nimport movie9 from \"../assets/poster/shark.jpg\";\nimport movie10 from \"../assets/poster/dmz.jpg\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport StarIcon from \"@mui/icons-material/Star\";\nimport { red } from \"@mui/material/colors\";\nimport useMovieData from \"./UseMovieData\";\nimport findMovieData from \"./FindMovieData\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MovieInfo() {\n  _s();\n  const param = useParams().index;\n  console.log(\"id\", param);\n  const id = param;\n  const popularMovie = FindMovieData(id);\n  console.log(\"-----------\", popularMovie);\n  return (\n    /*#__PURE__*/\n    // <div className=\"bg-black h-full w-full\">\n    //   {movie && dbReview && (\n    //     <div>\n    //       <div className=\"p-10 flex\">\n    //         {/* <img src={posterImage[param]} alt=\"Movie Poster\" className=\"w-72 mb-5\" /> */}\n    //         <div className=\"ml-5 mt-24\">\n    //           <div className=\"text-3xl font-extrabold mb-3 text-white\">\n    //             {movie.movieNm}\n    //           </div>\n    //           <div className=\"text-lg font-medium text-white\">\n    //             개봉일: {dbData.release_date}\n    //           </div>\n    //           <div className=\"text-lg font-medium text-white\">\n    //             상영시간: {dbData.running_time}\n    //           </div>\n    //           <div className=\"text-lg font-medium text-white\">\n    //             등급: {dbData.age_rating}\n    //           </div>\n    //           <div className=\"text-lg font-medium text-white\">\n    //             장르: {dbData.genre}\n    //           </div>\n    //           <div className=\"text-lg font-medium text-white\">\n    //             시놉시스: {dbData.synopsis}\n    //           </div>\n    //           <div className=\"text-lg font-medium text-white\">\n    //             감독: {dbData.director}\n    //           </div>\n    //           <div className=\"text-lg font-medium text-white\">\n    //             출연진: {dbData.casts}\n    //           </div>\n    //         </div>\n    //       </div>\n    //       <div className=\"flex justify-end items-center text-white mb-3 mr-12\">\n    //         {/* 리뷰 등록 모달 */}\n    //         <React.Fragment>\n    //           <Button variant=\"outlined\" onClick={(e) => handleClickOpenInsert(e)}\n    //             style={{\n    //               backgroundColor: red[400], // 300하면 비슷한데 음 몰라\n    //               fontWeight: \"bold\",\n    //               color: \"white\",\n    //               borderColor: red[400],\n    //               marginRight: \"5px\",\n    //             }}>\n    //             등록\n    //           </Button>\n    //           <Dialog open={openInsert} onClose={handleClose}>\n    //             <DialogTitle>등록</DialogTitle>\n    //             <DialogContent>\n    //               <DialogContentText>\n    //                 등록할 내용을 작성해주세요\n    //               </DialogContentText>\n    //               <TextField\n    //                 disabled\n    //                 id=\"email\"\n    //                 label=\"Email\"\n    //                 defaultValue={localStorage.getItem(\"userId\")}\n    //                 variant=\"standard\"\n    //                 fullWidth\n    //               />\n    //               <TextField\n    //                 onChange={handleContent}\n    //                 autoFocus\n    //                 required\n    //                 margin=\"dense\"\n    //                 id=\"content\"\n    //                 name=\"content\"\n    //                 label=\"새로운 내용\"\n    //                 type=\"text\"\n    //                 fullWidth\n    //                 variant=\"standard\"\n    //               />\n    //               <TextField\n    //                 onChange={handleGrade}\n    //                 autoFocus\n    //                 required\n    //                 margin=\"dense\"\n    //                 id=\"grade\"\n    //                 name=\"grade\"\n    //                 label=\"새로운 등급\"\n    //                 type=\"number\"\n    //                 fullWidth\n    //                 variant=\"standard\"\n    //               />\n    //             </DialogContent>\n    //             <DialogActions>\n    //               <Button onClick={handleClose}>취소</Button>\n    //               <Button onClick={handleInsert}>등록</Button>\n    //             </DialogActions>\n    //           </Dialog>\n    //         </React.Fragment>\n    //       </div>\n    //       <div className=\"flex justify-end m-3\">\n    //         {/* 리뷰 정렬 버튼 */}\n    //         <button\n    //           variant=\"outlined\"\n    //           className=\"hover:underline text-white px-4 py-2 rounded-md mr-2\"\n    //           onClick={() => {\n    //             // setSortBy(sortBy === \"grade\" ? \"date\" : \"grade\")\n    //             setSortBy(\"grade\")\n    //             setOrderBy(orderBy === \"asc\" ? \"desc\" : \"asc\");\n    //             // handleSortReviews(orderBy === \"asc\" ? \"desc\" : \"asc\");\n    //           }}>\n    //           {orderBy === \"asc\" ? \"▼ 등급 낮은 순\" : \"▲ 등급 높은 순\"}\n    //         </button>\n    //         <button\n    //           variant=\"outlined\"\n    //           className=\"hover:underline text-white px-4 py-2 rounded-md mr-5\"\n    //           onClick={() => {\n    //             // setSortBy(sortBy === \"date\" ? \"grade\" : \"date\")\n    //             setSortBy(\"date\")\n    //             setOrderBy(orderBy === \"asc\" ? \"desc\" : \"asc\");\n    //           }}>\n    //           {orderBy === \"asc\" ? \"▼ 오래된 순\" : \"▲ 최신 순\"}\n    //         </button>\n    //       </div>\n    //       <div className=\"pl-10 pr-10 pb-10\">\n    //         <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\n    //           {dbReview.map((rv, idx) => (\n    //             <div key={idx} className=\"bg-gray-800 rounded-lg overflow-hidden\">\n    //               <div className=\"p-4\">\n    //                 <div className=\"flex items-center mb-2\">\n    //                   <svg className=\"fill-white h-10 w-10 mr-3\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\n    //                     <path d=\"M224 256A128 128 0 1 0 224 0a128 128 0 1 0 0 256zm-45.7 48C79.8 304 0 383.8 0 482.3C0 498.7 13.3 512 29.7 512H418.3c16.4 0 29.7-13.3 29.7-29.7C448 383.8 368.2 304 269.7 304H178.3z\" />\n    //                   </svg>\n    //                   <div className=\"flex w-full content-between\">\n    //                     <div className=\"text-lg font-medium text-white\">\n    //                       {getWriterId(rv.writer)}\n    //                     </div>\n    //                   </div>\n    //                   <div\n    //                     className=\"text-2xl font-bold text-center text-white mb-2\"\n    //                     style={{ whiteSpace: \"nowrap\" }}>\n    //                     {Array.from({ length: 5 }, (_, index) => (\n    //                       <StarIcon\n    //                         key={index}\n    //                         sx={{ color: index < rv.grade ? \"#FFD700\" : \"gray\", fontSize: 24 }}\n    //                       />\n    //                     ))}\n    //                   </div>\n    //                 </div>\n    //                 <div className=\"text-lg font-medium text-white mb-4\">\n    //                   {rv.content}\n    //                 </div>\n    //                 <div className=\"text-lg font-medium text-white mb-2\">\n    //                   {rv.date}\n    //                 </div>\n    //                 <div className=\"flex justify-end\">\n    //                   <div className=\"items-center text-white mt-1\">\n    //                     {/* 리뷰 수정 모달 */}\n    //                     <React.Fragment>\n    //                       <Button\n    //                         review={rv}\n    //                         variant=\"outlined\"\n    //                         onClick={(e) => handleClickOpenUpdate(e, rv.review_id, rv.content, rv.grade)}\n    //                         style={{\n    //                           backgroundColor: red[400],\n    //                           fontWeight: \"bold\",\n    //                           color: \"white\",\n    //                           borderColor: red[400],\n    //                           marginRight: \"5px\",\n    //                         }}>\n    //                         수정\n    //                       </Button>\n    //                       <Dialog\n    //                         open={openModify}\n    //                         onClose={handleClose}>\n    //                         <DialogTitle>수정</DialogTitle>\n    //                         <DialogContent>\n    //                           <DialogContentText>\n    //                             수정할 내용을 작성해주세요\n    //                           </DialogContentText>\n    //                           <TextField\n    //                             onChange={handleGrade}\n    //                             autoFocus\n    //                             required\n    //                             margin=\"dense\"\n    //                             id=\"grade\"\n    //                             name=\"grade\"\n    //                             label=\"새로운 등급\"\n    //                             type=\"number\"\n    //                             fullWidth\n    //                             variant=\"standard\"\n    //                             defaultValue={selectedGrade}\n    //                           />\n    //                           <TextField\n    //                             onChange={handleContent}\n    //                             autoFocus\n    //                             required\n    //                             margin=\"dense\"\n    //                             id=\"content\"\n    //                             name=\"content\"\n    //                             label=\"새로운 내용\"\n    //                             type=\"text\"\n    //                             fullWidth\n    //                             variant=\"standard\"\n    //                             defaultValue={selectedContent}\n    //                           />\n    //                         </DialogContent>\n    //                         <DialogActions>\n    //                           <Button onClick={handleClose}>취소</Button>\n    //                           <Button onClick={(e) => handleUpdate(selectedReviewId)}>저장</Button>\n    //                         </DialogActions>\n    //                       </Dialog>\n    //                     </React.Fragment>\n    //                   </div>\n    //                   {/* 리뷰 삭제 모달 */}\n    //                   <div className=\"items-center text-white mt-1\">\n    //                     <React.Fragment>\n    //                       <Button\n    //                         review={rv}\n    //                         variant=\"outlined\"\n    //                         onClick={(e) => handleClickOpenDelete(e, rv.review_id)}\n    //                         style={{\n    //                           backgroundColor: red[400],\n    //                           fontWeight: \"bold\",\n    //                           color: \"white\",\n    //                           borderColor: red[400],\n    //                           marginRight: \"5px\",\n    //                         }}>\n    //                         삭제\n    //                       </Button>\n    //                       <Dialog\n    //                         open={openDelete}\n    //                         onClose={handleClose}\n    //                         aria-labelledby=\"alert-dialog-title\"\n    //                         aria-describedby=\"alert-dialog-description\"\n    //                       >\n    //                         <DialogTitle id=\"alert-dialog-title\">\n    //                           삭제\n    //                         </DialogTitle>\n    //                         <DialogContent>\n    //                           <DialogContentText id=\"alert-dialog-description\">\n    //                             해당 리뷰를 삭제하시겠습니까?\n    //                           </DialogContentText>\n    //                         </DialogContent>\n    //                         <DialogActions>\n    //                           <Button onClick={(e) => handleDelete(selectedDeleteId)}>\n    //                             삭제\n    //                           </Button>\n    //                           <Button onClick={handleClose} autoFocus>\n    //                             취소\n    //                           </Button>\n    //                         </DialogActions>\n    //                       </Dialog>\n    //                     </React.Fragment>\n    //                   </div>\n    //                 </div>\n    //               </div>\n    //             </div>\n    //           ))}\n    //         </div>\n    //       </div>\n    //     </div>\n    //   )}\n    // </div>\n    _jsxDEV(_Fragment, {}, void 0, false)\n  );\n}\n_s(MovieInfo, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n  return [useParams];\n});\n_c = MovieInfo;\nvar _c;\n$RefreshReg$(_c, \"MovieInfo\");","map":{"version":3,"names":["React","useEffect","useState","useParams","userEmail","useRecoilState","movie1","movie2","movie3","movie4","movie5","movie6","movie7","movie8","movie9","movie10","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","StarIcon","red","useMovieData","findMovieData","Fragment","_Fragment","jsxDEV","_jsxDEV","MovieInfo","_s","param","index","console","log","id","popularMovie","FindMovieData","_c","$RefreshReg$"],"sources":["C:/Users/Samsung/Desktop/stellanex_graduation/src/Component/MovieInfo.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { userEmail } from \"./AtomSt\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport movie1 from \"../assets/poster/wonka.jpg\";\r\nimport movie2 from \"../assets/poster/gungook.jpg\";\r\nimport movie3 from \"../assets/poster/qukal.jpg\";\r\nimport movie4 from \"../assets/poster/simin.jpg\";\r\nimport movie5 from \"../assets/poster/sopung.jpg\";\r\nimport movie6 from \"../assets/poster/dogdys.jpg\";\r\nimport movie7 from \"../assets/poster/deadman.jpg\";\r\nimport movie8 from \"../assets/poster/agail.jpg\";\r\nimport movie9 from \"../assets/poster/shark.jpg\";\r\nimport movie10 from \"../assets/poster/dmz.jpg\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport { red } from \"@mui/material/colors\";\r\nimport useMovieData from \"./UseMovieData\";\r\nimport findMovieData from \"./FindMovieData\";\r\n\r\nexport default function MovieInfo() {\r\n\r\n  const param = useParams().index;\r\n  console.log(\"id\", param)\r\n\r\n  const id = param\r\n  const popularMovie = FindMovieData(id);\r\n\r\n  console.log(\"-----------\", popularMovie)\r\n\r\n\r\n  return (\r\n    // <div className=\"bg-black h-full w-full\">\r\n    //   {movie && dbReview && (\r\n    //     <div>\r\n    //       <div className=\"p-10 flex\">\r\n    //         {/* <img src={posterImage[param]} alt=\"Movie Poster\" className=\"w-72 mb-5\" /> */}\r\n    //         <div className=\"ml-5 mt-24\">\r\n    //           <div className=\"text-3xl font-extrabold mb-3 text-white\">\r\n    //             {movie.movieNm}\r\n    //           </div>\r\n    //           <div className=\"text-lg font-medium text-white\">\r\n    //             개봉일: {dbData.release_date}\r\n    //           </div>\r\n    //           <div className=\"text-lg font-medium text-white\">\r\n    //             상영시간: {dbData.running_time}\r\n    //           </div>\r\n    //           <div className=\"text-lg font-medium text-white\">\r\n    //             등급: {dbData.age_rating}\r\n    //           </div>\r\n    //           <div className=\"text-lg font-medium text-white\">\r\n    //             장르: {dbData.genre}\r\n    //           </div>\r\n    //           <div className=\"text-lg font-medium text-white\">\r\n    //             시놉시스: {dbData.synopsis}\r\n    //           </div>\r\n    //           <div className=\"text-lg font-medium text-white\">\r\n    //             감독: {dbData.director}\r\n    //           </div>\r\n    //           <div className=\"text-lg font-medium text-white\">\r\n    //             출연진: {dbData.casts}\r\n    //           </div>\r\n    //         </div>\r\n    //       </div>\r\n    //       <div className=\"flex justify-end items-center text-white mb-3 mr-12\">\r\n    //         {/* 리뷰 등록 모달 */}\r\n    //         <React.Fragment>\r\n    //           <Button variant=\"outlined\" onClick={(e) => handleClickOpenInsert(e)}\r\n    //             style={{\r\n    //               backgroundColor: red[400], // 300하면 비슷한데 음 몰라\r\n    //               fontWeight: \"bold\",\r\n    //               color: \"white\",\r\n    //               borderColor: red[400],\r\n    //               marginRight: \"5px\",\r\n    //             }}>\r\n    //             등록\r\n    //           </Button>\r\n    //           <Dialog open={openInsert} onClose={handleClose}>\r\n    //             <DialogTitle>등록</DialogTitle>\r\n    //             <DialogContent>\r\n    //               <DialogContentText>\r\n    //                 등록할 내용을 작성해주세요\r\n    //               </DialogContentText>\r\n    //               <TextField\r\n    //                 disabled\r\n    //                 id=\"email\"\r\n    //                 label=\"Email\"\r\n    //                 defaultValue={localStorage.getItem(\"userId\")}\r\n    //                 variant=\"standard\"\r\n    //                 fullWidth\r\n    //               />\r\n    //               <TextField\r\n    //                 onChange={handleContent}\r\n    //                 autoFocus\r\n    //                 required\r\n    //                 margin=\"dense\"\r\n    //                 id=\"content\"\r\n    //                 name=\"content\"\r\n    //                 label=\"새로운 내용\"\r\n    //                 type=\"text\"\r\n    //                 fullWidth\r\n    //                 variant=\"standard\"\r\n    //               />\r\n    //               <TextField\r\n    //                 onChange={handleGrade}\r\n    //                 autoFocus\r\n    //                 required\r\n    //                 margin=\"dense\"\r\n    //                 id=\"grade\"\r\n    //                 name=\"grade\"\r\n    //                 label=\"새로운 등급\"\r\n    //                 type=\"number\"\r\n    //                 fullWidth\r\n    //                 variant=\"standard\"\r\n    //               />\r\n    //             </DialogContent>\r\n    //             <DialogActions>\r\n    //               <Button onClick={handleClose}>취소</Button>\r\n    //               <Button onClick={handleInsert}>등록</Button>\r\n    //             </DialogActions>\r\n    //           </Dialog>\r\n    //         </React.Fragment>\r\n    //       </div>\r\n    //       <div className=\"flex justify-end m-3\">\r\n    //         {/* 리뷰 정렬 버튼 */}\r\n    //         <button\r\n    //           variant=\"outlined\"\r\n    //           className=\"hover:underline text-white px-4 py-2 rounded-md mr-2\"\r\n    //           onClick={() => {\r\n    //             // setSortBy(sortBy === \"grade\" ? \"date\" : \"grade\")\r\n    //             setSortBy(\"grade\")\r\n    //             setOrderBy(orderBy === \"asc\" ? \"desc\" : \"asc\");\r\n    //             // handleSortReviews(orderBy === \"asc\" ? \"desc\" : \"asc\");\r\n    //           }}>\r\n    //           {orderBy === \"asc\" ? \"▼ 등급 낮은 순\" : \"▲ 등급 높은 순\"}\r\n    //         </button>\r\n    //         <button\r\n    //           variant=\"outlined\"\r\n    //           className=\"hover:underline text-white px-4 py-2 rounded-md mr-5\"\r\n    //           onClick={() => {\r\n    //             // setSortBy(sortBy === \"date\" ? \"grade\" : \"date\")\r\n    //             setSortBy(\"date\")\r\n    //             setOrderBy(orderBy === \"asc\" ? \"desc\" : \"asc\");\r\n    //           }}>\r\n    //           {orderBy === \"asc\" ? \"▼ 오래된 순\" : \"▲ 최신 순\"}\r\n    //         </button>\r\n    //       </div>\r\n    //       <div className=\"pl-10 pr-10 pb-10\">\r\n    //         <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\r\n    //           {dbReview.map((rv, idx) => (\r\n    //             <div key={idx} className=\"bg-gray-800 rounded-lg overflow-hidden\">\r\n    //               <div className=\"p-4\">\r\n    //                 <div className=\"flex items-center mb-2\">\r\n    //                   <svg className=\"fill-white h-10 w-10 mr-3\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\r\n    //                     <path d=\"M224 256A128 128 0 1 0 224 0a128 128 0 1 0 0 256zm-45.7 48C79.8 304 0 383.8 0 482.3C0 498.7 13.3 512 29.7 512H418.3c16.4 0 29.7-13.3 29.7-29.7C448 383.8 368.2 304 269.7 304H178.3z\" />\r\n    //                   </svg>\r\n    //                   <div className=\"flex w-full content-between\">\r\n    //                     <div className=\"text-lg font-medium text-white\">\r\n    //                       {getWriterId(rv.writer)}\r\n    //                     </div>\r\n    //                   </div>\r\n    //                   <div\r\n    //                     className=\"text-2xl font-bold text-center text-white mb-2\"\r\n    //                     style={{ whiteSpace: \"nowrap\" }}>\r\n    //                     {Array.from({ length: 5 }, (_, index) => (\r\n    //                       <StarIcon\r\n    //                         key={index}\r\n    //                         sx={{ color: index < rv.grade ? \"#FFD700\" : \"gray\", fontSize: 24 }}\r\n    //                       />\r\n    //                     ))}\r\n    //                   </div>\r\n    //                 </div>\r\n    //                 <div className=\"text-lg font-medium text-white mb-4\">\r\n    //                   {rv.content}\r\n    //                 </div>\r\n    //                 <div className=\"text-lg font-medium text-white mb-2\">\r\n    //                   {rv.date}\r\n    //                 </div>\r\n    //                 <div className=\"flex justify-end\">\r\n    //                   <div className=\"items-center text-white mt-1\">\r\n    //                     {/* 리뷰 수정 모달 */}\r\n    //                     <React.Fragment>\r\n    //                       <Button\r\n    //                         review={rv}\r\n    //                         variant=\"outlined\"\r\n    //                         onClick={(e) => handleClickOpenUpdate(e, rv.review_id, rv.content, rv.grade)}\r\n    //                         style={{\r\n    //                           backgroundColor: red[400],\r\n    //                           fontWeight: \"bold\",\r\n    //                           color: \"white\",\r\n    //                           borderColor: red[400],\r\n    //                           marginRight: \"5px\",\r\n    //                         }}>\r\n    //                         수정\r\n    //                       </Button>\r\n    //                       <Dialog\r\n    //                         open={openModify}\r\n    //                         onClose={handleClose}>\r\n    //                         <DialogTitle>수정</DialogTitle>\r\n    //                         <DialogContent>\r\n    //                           <DialogContentText>\r\n    //                             수정할 내용을 작성해주세요\r\n    //                           </DialogContentText>\r\n    //                           <TextField\r\n    //                             onChange={handleGrade}\r\n    //                             autoFocus\r\n    //                             required\r\n    //                             margin=\"dense\"\r\n    //                             id=\"grade\"\r\n    //                             name=\"grade\"\r\n    //                             label=\"새로운 등급\"\r\n    //                             type=\"number\"\r\n    //                             fullWidth\r\n    //                             variant=\"standard\"\r\n    //                             defaultValue={selectedGrade}\r\n    //                           />\r\n    //                           <TextField\r\n    //                             onChange={handleContent}\r\n    //                             autoFocus\r\n    //                             required\r\n    //                             margin=\"dense\"\r\n    //                             id=\"content\"\r\n    //                             name=\"content\"\r\n    //                             label=\"새로운 내용\"\r\n    //                             type=\"text\"\r\n    //                             fullWidth\r\n    //                             variant=\"standard\"\r\n    //                             defaultValue={selectedContent}\r\n    //                           />\r\n    //                         </DialogContent>\r\n    //                         <DialogActions>\r\n    //                           <Button onClick={handleClose}>취소</Button>\r\n    //                           <Button onClick={(e) => handleUpdate(selectedReviewId)}>저장</Button>\r\n    //                         </DialogActions>\r\n    //                       </Dialog>\r\n    //                     </React.Fragment>\r\n    //                   </div>\r\n    //                   {/* 리뷰 삭제 모달 */}\r\n    //                   <div className=\"items-center text-white mt-1\">\r\n    //                     <React.Fragment>\r\n    //                       <Button\r\n    //                         review={rv}\r\n    //                         variant=\"outlined\"\r\n    //                         onClick={(e) => handleClickOpenDelete(e, rv.review_id)}\r\n    //                         style={{\r\n    //                           backgroundColor: red[400],\r\n    //                           fontWeight: \"bold\",\r\n    //                           color: \"white\",\r\n    //                           borderColor: red[400],\r\n    //                           marginRight: \"5px\",\r\n    //                         }}>\r\n    //                         삭제\r\n    //                       </Button>\r\n    //                       <Dialog\r\n    //                         open={openDelete}\r\n    //                         onClose={handleClose}\r\n    //                         aria-labelledby=\"alert-dialog-title\"\r\n    //                         aria-describedby=\"alert-dialog-description\"\r\n    //                       >\r\n    //                         <DialogTitle id=\"alert-dialog-title\">\r\n    //                           삭제\r\n    //                         </DialogTitle>\r\n    //                         <DialogContent>\r\n    //                           <DialogContentText id=\"alert-dialog-description\">\r\n    //                             해당 리뷰를 삭제하시겠습니까?\r\n    //                           </DialogContentText>\r\n    //                         </DialogContent>\r\n    //                         <DialogActions>\r\n    //                           <Button onClick={(e) => handleDelete(selectedDeleteId)}>\r\n    //                             삭제\r\n    //                           </Button>\r\n    //                           <Button onClick={handleClose} autoFocus>\r\n    //                             취소\r\n    //                           </Button>\r\n    //                         </DialogActions>\r\n    //                       </Dialog>\r\n    //                     </React.Fragment>\r\n    //                   </div>\r\n    //                 </div>\r\n    //               </div>\r\n    //             </div>\r\n    //           ))}\r\n    //         </div>\r\n    //       </div>\r\n    //     </div>\r\n    //   )}\r\n    // </div>\r\n    <></>\r\n  );\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,SAAS,QAAQ,UAAU;AACpC,SAASC,cAAc,QAAQ,QAAQ;AAEvC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,MAAM,MAAM,8BAA8B;AACjD,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,MAAM,MAAM,8BAA8B;AACjD,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,OAAO,MAAM,0BAA0B;AAE9C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,iBAAiB,MAAM,iCAAiC;AAC/D,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,SAASC,GAAG,QAAQ,sBAAsB;AAC1C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAElC,MAAMC,KAAK,GAAG9B,SAAS,CAAC,CAAC,CAAC+B,KAAK;EAC/BC,OAAO,CAACC,GAAG,CAAC,IAAI,EAAEH,KAAK,CAAC;EAExB,MAAMI,EAAE,GAAGJ,KAAK;EAChB,MAAMK,YAAY,GAAGC,aAAa,CAACF,EAAE,CAAC;EAEtCF,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEE,YAAY,CAAC;EAGxmBAAI;EAAC;AAET;AAACI,EAAA,CA7QuBD,SAAS;EAAA,QAEjB5B,SAAS;AAAA;AAAAqC,EAAA,GAFDT,SAAS;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}