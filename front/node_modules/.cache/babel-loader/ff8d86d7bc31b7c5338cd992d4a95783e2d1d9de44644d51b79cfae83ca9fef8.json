{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\Desktop\\\\stellanex_graduation\\\\src\\\\Component\\\\LikeDislikeFunc.js\",\n  _s = $RefreshSig$();\n// 제일 처음 코드\n// import React, { useState } from 'react';\n\n// function LikeDislikeFunc({reviewId}) {\n//     const [like, setLike] = useState(0);\n//     const [dislike, setDislike] = useState(0);\n//     const [isLiked, setIsLiked] = useState(false);\n//     const [isDisliked, setIsDisliked] = useState(false);\n\n//     const updateLike = (value) => {\n\n//         console.log(\"loveValue: \", value)\n\n//         fetch(`http://192.168.56.1:8080/movie/love/${reviewId}`, {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify({\n//                 love: value\n//             })\n//         })\n//         .then((res) => {\n//             // 응답 상태가 성공적이면 JSON으로 파싱\n//             if (!res.ok) {\n//                 throw new Error('Network response was not ok');\n//             }\n//             return res.json();\n//         })\n//         .then((data) => {\n//             console.log(\"서버 응답:\", data); // 서버의 응답 내용 확인\n//             // 필요한 로직 추가\n//             setLike(data.love); // 업데이트된 좋아요 수로 상태 업데이트\n//         })\n//         .catch((err) => console.error(err));\n//     }\n\n//     const updateDislike = (value) => {\n\n//         console.log(\"hateValue: \", value)\n\n//         fetch(`http://192.168.56.1:8080/movie/hate/${reviewId}`, {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify({\n//                 hate: value\n//             })\n//         })\n//         .then((res) => {\n//             // 응답 상태가 성공적이면 JSON으로 파싱\n//             if (!res.ok) {\n//                 throw new Error('Network response was not ok');\n//             }\n//             return res.json();\n//         })\n//         .then((data) => {\n//             console.log(\"서버 응답:\", data); // 서버의 응답 내용 확인\n//             // 필요한 로직 추가\n//             setDislike(data.hate); // 업데이트된 좋아요 수로 상태 업데이트\n//         })\n//         .catch((err) => console.error(err));\n//     }\n\n//     // 좋아요 버튼 클릭 처리 함수\n//     const handleLike = () => {\n//         if (isLiked) {\n//             setLike(like - 1); // 좋아요 취소\n//             updateLike(-1) // 좋아요 취소 전송\n//             setIsLiked(false);\n//         } else {\n//             setLike(like + 1); // 좋아요\n//             updateLike(1) // 좋아요 전송\n//             setIsLiked(true);\n//             if (isDisliked) {\n//                 setDislike(dislike - 1); // 싫어요 취소\n//                 updateDislike(-1) // 싫어요 취소 전송\n//                 setIsDisliked(false);\n//             }\n//         }\n//     };\n\n//     // 싫어요 버튼 클릭 처리 함수\n//     const handleDislike = () => {\n//         if (isDisliked) {\n//             setDislike(dislike - 1); // 싫어요 취소\n//             updateDislike(-1) // 싫어요 취소 전송\n//             setIsDisliked(false);\n//         } else {\n//             setDislike(dislike + 1); // 싫어요\n//             updateDislike(1) // 싫어요 전송\n//             setIsDisliked(true);\n//             if (isLiked) {\n//                 setLike(like - 1); // 좋아요 취소\n//                 updateLike(-1) // 좋아요 취소 전송\n//                 setIsLiked(false);\n//             }\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <button onClick={handleLike} className='text-white mr-2'>\n//                 👍 좋아요 {like}\n//             </button>\n//             <button onClick={handleDislike} className='text-white'>\n//                 👎 싫어요 {dislike}\n//             </button>\n//         </div>\n//     );\n// }\n\n// export default LikeDislikeFunc;\n\n// 내가 수정한거\n// import React, { useEffect, useState } from 'react';\n\n// function LikeDislikeFunc({ reviewId, love, hate }) {\n\n//     const [isLiked, setIsLiked] = useState(false);\n//     const [like, setLike] = useState();\n//     const [isDisliked, setIsDisliked] = useState(false);\n//     const [dislike, setDislike] = useState();\n\n//     useEffect(() => {\n//         setLike(love);\n//     }, [love])\n\n//     useEffect(() => {\n//         setDislike(hate);\n//     }, [hate])\n\n//     useEffect(() => {\n\n//         fetch(`http://192.168.56.1:8080/movie/love/${reviewId}`, {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify({\n//                 love: isLiked ? 1 : -1  // 좋아요 상태에 따라 1 또는 -1 전달\n//             })\n//         })\n//             .then((res) => {\n//                 // 응답 상태가 성공적이면 JSON으로 파싱\n//                 if (!res.ok) {\n//                     throw new Error('Network response was not ok');\n//                 }\n//                 return res.json();\n//             })\n//             .then((data) => {\n//                 console.log(\"서버 응답:\", data); // 서버의 응답 내용 확인\n//             })\n//             .catch((err) => console.error(err));\n\n//     }, [like, dislike])\n\n//     useEffect(() => {\n\n//         fetch(`http://192.168.56.1:8080/movie/hate/${reviewId}`, {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify({\n//                 hate: isDisliked ? 1 : -1  // 좋아요 상태에 따라 1 또는 -1 전달\n//             })\n//         })\n//             .then((res) => {\n//                 // 응답 상태가 성공적이면 JSON으로 파싱\n//                 if (!res.ok) {\n//                     throw new Error('Network response was not ok');\n//                 }\n//                 return res.json();\n//             })\n//             .then((data) => {\n//                 console.log(\"서버 응답:\", data); // 서버의 응답 내용 확인\n//             })\n//             .catch((err) => console.error(err));\n\n//     }, [dislike, like])\n\n//     const handleLike = () => {\n//         if (isLiked) {\n//             setIsLiked(false)\n//             setLike(like - 1)\n//         } else {\n//             setIsLiked(true)\n//             setLike(like + 1)\n//             if (isDisliked) {\n//                 setIsDisliked(false);\n//                 setDislike(dislike - 1);\n//             }\n//         }\n//     }\n\n//     const handleDislike = () => {\n//         if (isDisliked) {\n//             setIsDisliked(false)\n//             setDislike(dislike - 1)\n//         } else {\n//             setIsDisliked(true)\n//             setDislike(dislike + 1)\n//             if (isLiked) {\n//                 setIsLiked(false);\n//                 setLike(like - 1);\n//             }\n//         }\n//     }\n\n//     console.log(reviewId, love, hate);\n\n//     return (\n//         <div className='flex justify-end items-center'>\n//             {like !== null && (\n//                 <button onClick={handleLike} className='flex items-center mr-2'>\n//                     {isLiked ?\n//                         <svg className='fill-white w-6 h-6' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n//                             <path d=\"M313.4 32.9c26 5.2 42.9 30.5 37.7 56.5l-2.3 11.4c-5.3 26.7-15.1 52.1-28.8 75.2l144 0c26.5 0 48 21.5 48 48c0 18.5-10.5 34.6-25.9 42.6C497 275.4 504 288.9 504 304c0 23.4-16.8 42.9-38.9 47.1c4.4 7.3 6.9 15.8 6.9 24.9c0 21.3-13.9 39.4-33.1 45.6c.7 3.3 1.1 6.8 1.1 10.4c0 26.5-21.5 48-48 48l-97.5 0c-19 0-37.5-5.6-53.3-16.1l-38.5-25.7C176 420.4 160 390.4 160 358.3l0-38.3 0-48 0-24.9c0-29.2 13.3-56.7 36-75l7.4-5.9c26.5-21.2 44.6-51 51.2-84.2l2.3-11.4c5.2-26 30.5-42.9 56.5-37.7zM32 192l64 0c17.7 0 32 14.3 32 32l0 224c0 17.7-14.3 32-32 32l-64 0c-17.7 0-32-14.3-32-32L0 224c0-17.7 14.3-32 32-32z\" />\n//                         </svg>\n//                         :\n//                         <svg className='fill-white w-6 h-6' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n//                             <path d=\"M323.8 34.8c-38.2-10.9-78.1 11.2-89 49.4l-5.7 20c-3.7 13-10.4 25-19.5 35l-51.3 56.4c-8.9 9.8-8.2 25 1.6 33.9s25 8.2 33.9-1.6l51.3-56.4c14.1-15.5 24.4-34 30.1-54.1l5.7-20c3.6-12.7 16.9-20.1 29.7-16.5s20.1 16.9 16.5 29.7l-5.7 20c-5.7 19.9-14.7 38.7-26.6 55.5c-5.2 7.3-5.8 16.9-1.7 24.9s12.3 13 21.3 13L448 224c8.8 0 16 7.2 16 16c0 6.8-4.3 12.7-10.4 15c-7.4 2.8-13 9-14.9 16.7s.1 15.8 5.3 21.7c2.5 2.8 4 6.5 4 10.6c0 7.8-5.6 14.3-13 15.7c-8.2 1.6-15.1 7.3-18 15.2s-1.6 16.7 3.6 23.3c2.1 2.7 3.4 6.1 3.4 9.9c0 6.7-4.2 12.6-10.2 14.9c-11.5 4.5-17.7 16.9-14.4 28.8c.4 1.3 .6 2.8 .6 4.3c0 8.8-7.2 16-16 16l-97.5 0c-12.6 0-25-3.7-35.5-10.7l-61.7-41.1c-11-7.4-25.9-4.4-33.3 6.7s-4.4 25.9 6.7 33.3l61.7 41.1c18.4 12.3 40 18.8 62.1 18.8l97.5 0c34.7 0 62.9-27.6 64-62c14.6-11.7 24-29.7 24-50c0-4.5-.5-8.8-1.3-13c15.4-11.7 25.3-30.2 25.3-51c0-6.5-1-12.8-2.8-18.7C504.8 273.7 512 257.7 512 240c0-35.3-28.6-64-64-64l-92.3 0c4.7-10.4 8.7-21.2 11.8-32.2l5.7-20c10.9-38.2-11.2-78.1-49.4-89zM32 192c-17.7 0-32 14.3-32 32L0 448c0 17.7 14.3 32 32 32l64 0c17.7 0 32-14.3 32-32l0-224c0-17.7-14.3-32-32-32l-64 0z\" />\n//                         </svg>\n//                     }\n//                     <div className='text-white m-2'> 좋아요 {like} </div>\n//                 </button>\n//             )}\n//             {dislike !== null && (\n//                 <button onClick={handleDislike} className='flex items-center'>\n//                     {isDisliked ?\n//                         <svg className='fill-white w-6 h-6' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n//                             <path d=\"M313.4 479.1c26-5.2 42.9-30.5 37.7-56.5l-2.3-11.4c-5.3-26.7-15.1-52.1-28.8-75.2l144 0c26.5 0 48-21.5 48-48c0-18.5-10.5-34.6-25.9-42.6C497 236.6 504 223.1 504 208c0-23.4-16.8-42.9-38.9-47.1c4.4-7.3 6.9-15.8 6.9-24.9c0-21.3-13.9-39.4-33.1-45.6c.7-3.3 1.1-6.8 1.1-10.4c0-26.5-21.5-48-48-48l-97.5 0c-19 0-37.5 5.6-53.3 16.1L202.7 73.8C176 91.6 160 121.6 160 153.7l0 38.3 0 48 0 24.9c0 29.2 13.3 56.7 36 75l7.4 5.9c26.5 21.2 44.6 51 51.2 84.2l2.3 11.4c5.2 26 30.5 42.9 56.5 37.7zM32 384l64 0c17.7 0 32-14.3 32-32l0-224c0-17.7-14.3-32-32-32L32 96C14.3 96 0 110.3 0 128L0 352c0 17.7 14.3 32 32 32z\" />\n//                         </svg>\n//                         : <svg className='fill-white w-6 h-6' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n//                             <path d=\"M323.8 477.2c-38.2 10.9-78.1-11.2-89-49.4l-5.7-20c-3.7-13-10.4-25-19.5-35l-51.3-56.4c-8.9-9.8-8.2-25 1.6-33.9s25-8.2 33.9 1.6l51.3 56.4c14.1 15.5 24.4 34 30.1 54.1l5.7 20c3.6 12.7 16.9 20.1 29.7 16.5s20.1-16.9 16.5-29.7l-5.7-20c-5.7-19.9-14.7-38.7-26.6-55.5c-5.2-7.3-5.8-16.9-1.7-24.9s12.3-13 21.3-13L448 288c8.8 0 16-7.2 16-16c0-6.8-4.3-12.7-10.4-15c-7.4-2.8-13-9-14.9-16.7s.1-15.8 5.3-21.7c2.5-2.8 4-6.5 4-10.6c0-7.8-5.6-14.3-13-15.7c-8.2-1.6-15.1-7.3-18-15.2s-1.6-16.7 3.6-23.3c2.1-2.7 3.4-6.1 3.4-9.9c0-6.7-4.2-12.6-10.2-14.9c-11.5-4.5-17.7-16.9-14.4-28.8c.4-1.3 .6-2.8 .6-4.3c0-8.8-7.2-16-16-16l-97.5 0c-12.6 0-25 3.7-35.5 10.7l-61.7 41.1c-11 7.4-25.9 4.4-33.3-6.7s-4.4-25.9 6.7-33.3l61.7-41.1c18.4-12.3 40-18.8 62.1-18.8L384 32c34.7 0 62.9 27.6 64 62c14.6 11.7 24 29.7 24 50c0 4.5-.5 8.8-1.3 13c15.4 11.7 25.3 30.2 25.3 51c0 6.5-1 12.8-2.8 18.7C504.8 238.3 512 254.3 512 272c0 35.3-28.6 64-64 64l-92.3 0c4.7 10.4 8.7 21.2 11.8 32.2l5.7 20c10.9 38.2-11.2 78.1-49.4 89zM32 384c-17.7 0-32-14.3-32-32L0 128c0-17.7 14.3-32 32-32l64 0c17.7 0 32 14.3 32 32l0 224c0 17.7-14.3 32-32 32l-64 0z\" />\n//                         </svg>\n//                     }\n//                     <div className='text-white ml-2'> 싫어요 {dislike} </div>\n//                 </button>\n//             )}\n//         </div>\n//     );\n// }\n\n// export default LikeDislikeFunc;\n\n// 오빠가 수정한 거\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LikeDislikeFunc({\n  reviewId,\n  love,\n  hate\n}) {\n  _s();\n  const [isLiked, setIsLiked] = useState(false);\n  const [like, setLike] = useState();\n  const [isDisliked, setIsDisliked] = useState(false);\n  const [dislike, setDislike] = useState();\n  useEffect(() => {\n    setLike(love);\n  }, [love]);\n  useEffect(() => {\n    setDislike(hate);\n  }, [hate]);\n\n  // useEffect(() => {\n\n  //     fetch(`http://192.168.56.1:8080/movie/love/${reviewId}`, {\n  //         method: 'POST',\n  //         headers: {\n  //             'Content-Type': 'application/json'\n  //         },\n  //         body: JSON.stringify({\n  //             love: isLiked ? 1 : -1  // 좋아요 상태에 따라 1 또는 -1 전달\n  //         })\n  //     })\n  //         .then((res) => {\n  //             // 응답 상태가 성공적이면 JSON으로 파싱\n  //             if (!res.ok) {\n  //                 throw new Error('Network response was not ok');\n  //             }\n  //             return res.json();\n  //         })\n  //         .then((data) => {\n  //             console.log(\"서버 응답:\", data); // 서버의 응답 내용 확인\n  //         })\n  //         .catch((err) => console.error(err));\n\n  // }, [like])\n\n  // useEffect(() => {\n\n  //     fetch(`http://192.168.56.1:8080/movie/hate/${reviewId}`, {\n  //         method: 'POST',\n  //         headers: {\n  //             'Content-Type': 'application/json'\n  //         },\n  //         body: JSON.stringify({\n  //             hate: isDisliked ? 1 : -1  // 좋아요 상태에 따라 1 또는 -1 전달\n  //         })\n  //     })\n  //         .then((res) => {\n  //             // 응답 상태가 성공적이면 JSON으로 파싱\n  //             if (!res.ok) {\n  //                 throw new Error('Network response was not ok');\n  //             }\n  //             return res.json();\n  //         })\n  //         .then((data) => {\n  //             console.log(\"서버 응답:\", data); // 서버의 응답 내용 확인\n  //         })\n  //         .catch((err) => console.error(err));\n\n  // }, [dislike])\n\n  // const handleLike = () => {\n  //     if (isLiked) {\n  //         setIsLiked(false)\n  //         setLike(like - 1)\n  //     } else {\n  //         setIsLiked(true)\n  //         setLike(like + 1)\n  //         if (isDisliked) {\n  //             setIsDisliked(false);\n  //             setDislike(dislike - 1);\n  //         }\n  //     }\n  // }\n\n  // const handleDislike = () => {\n  //     if (isDisliked) {\n  //         setIsDisliked(false)\n  //         setDislike(dislike - 1)\n  //     } else {\n  //         setIsDisliked(true)\n  //         setDislike(dislike + 1)\n  //         if (isLiked) {\n  //             setIsLiked(false);\n  //             setLike(like - 1);\n  //         }\n  //     }\n  // }\n\n  // const updateFeedback = (type, value) => {\n  //     fetch(`http://192.168.56.1:8080/movie/${type}/${reviewId}`, {\n  //         method: 'POST',\n  //         headers: {\n  //             'Content-Type': 'application/json',\n  //         },\n  //         body: JSON.stringify({ [type]: value }),\n  //     })\n  //         .then((res) => {\n  //             if (!res.ok) throw new Error('Network response was not ok');\n  //             return res.json();\n  //         })\n  //         .then((data) => console.log(\"서버 응답:\", data))\n  //         .catch((err) => console.error(err));\n  // };\n\n  // const handleLike = () => {\n  //     if (isLiked) {\n  //         setLike((prev) => prev - 1);\n  //         updateFeedback('love', -1);\n  //     } else {\n  //         setLike((prev) => prev + 1);\n  //         updateFeedback('love', 1);\n  //         if (isDisliked) {\n  //             setDislike(false);\n  //             setDislike((prev) => prev - 1);\n  //             updateFeedback('hate', -1);\n  //         }\n  //     }\n  //     setIsLiked(!isLiked);\n  // };\n  // // 좋아요 방어 0이하 방어 로직\n  // const handleDislike = () => {\n  //     if (isDisliked) {\n  //         // dislike를 취소하는 경우\n  //         setDislike((prev) => Math.max(prev - 1, 0)); // 0 이하로 떨어지지 않도록\n  //         updateFeedback('hate', -1);\n  //     } else {\n  //         // dislike를 추가하는 경우\n  //         setDislike((prev) => prev + 1);\n  //         updateFeedback('hate', 1);\n\n  //         // 이미 좋아요가 눌렸다면\n  //         if (isLiked) {\n  //             setIsLiked(false);\n  //             setLike((prev) => Math.max(prev - 1, 0)); // 0 이하로 떨어지지 않도록\n  //             updateFeedback('love', -1);\n  //         }\n  //     }\n  //     setIsDisliked(!isDisliked);\n  // };\n\n  // // dislike를 업데이트하는 부분\n  // const handleDislikeChange = (newDislikeCount) => {\n  //     // 새로운 dislike 수가 0보다 작은 경우 0으로 설정\n  //     const validDislikeCount = Math.max(newDislikeCount, 0);\n  //     setDislike(validDislikeCount);\n  // };\n\n  const updateCount = (count, setter) => Math.max(count, 0);\n  const updateFeedback = (feedbackType, value) => {\n    fetch(`http://192.168.56.1:8080/movie/${feedbackType}/${reviewId}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        [feedbackType]: value\n      })\n    }).then(res => {\n      if (!res.ok) throw new Error('Network response was not ok');\n      return res.json();\n    }).then(data => console.log(\"서버 응답:\", data)).catch(err => console.error(err));\n  };\n\n  // const handleLike = () => {\n  //     setLike((prev) => {\n  //         const newLike = isLiked ? updateCount(prev - 1, setLike) : updateCount(prev + 1, setLike);\n  //         updateFeedback('love', isLiked ? -1 : 1);\n  //         return newLike;\n  //     });\n  //     setIsLiked(!isLiked);\n\n  //     if (isDisliked) {\n  //         setDislike((prev) => updateCount(prev - 1, setDislike));\n  //         updateFeedback('hate', -1);\n  //         setIsDisliked(false);\n  //     }\n  // };\n\n  // const handleDislike = () => {\n  //     setDislike((prev) => {\n  //         const newDislike = isDisliked ? updateCount(prev - 1, setDislike) : updateCount(prev + 1, setDislike);\n  //         updateFeedback('hate', isDisliked ? -1 : 1);\n  //         return newDislike;\n  //     });\n  //     setIsDisliked(!isDisliked);\n\n  //     if (isLiked) {\n  //         setLike((prev) => updateCount(prev - 1, setLike));\n  //         updateFeedback('love', -1);\n  //         setIsLiked(false);\n  //     }\n  // };\n\n  // JSX 부분 생략\n  const handleLike = reviewId => {\n    const existingDislike = dislikes[reviewId] || 0; // 현재 싫어요 값 가져오기\n    if (existingDislike === 1) {\n      // 싫어요가 1일 경우, 싫어요를 0으로 변경\n      setDislikes(prevDislikes => ({\n        ...prevDislikes,\n        [reviewId]: 0\n      }));\n      setLikeCount(prevLikes => prevLikes + 1); // 좋아요를 1 증가\n    } else {\n      // 싫어요가 없거나 0일 경우, 좋아요만 증가\n      setLikeCount(prevLikes => prevLikes + 1);\n    }\n  };\n  const handleDislike = reviewId => {\n    const existingLike = like[reviewId] || 0; // 현재 좋아요 값 가져오기\n    if (existingLike === 1) {\n      // 좋아요가 1일 경우, 좋아요를 0으로 변경\n      setLike(prevLikes => ({\n        ...prevLikes,\n        [reviewId]: 0\n      }));\n      setDislikeCount(prevDislikes => prevDislikes + 1); // 싫어요를 1 증가\n    } else {\n      // 좋아요가 없거나 0일 경우, 싫어요만 증가\n      setDislikeCount(prevDislikes => prevDislikes + 1);\n    }\n  };\n  console.log(reviewId, love, hate);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-end items-center\",\n    children: [like !== null && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLike,\n      className: \"flex items-center mr-2\",\n      children: [isLiked ? /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"fill-white w-6 h-6\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 512 512\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M313.4 32.9c26 5.2 42.9 30.5 37.7 56.5l-2.3 11.4c-5.3 26.7-15.1 52.1-28.8 75.2l144 0c26.5 0 48 21.5 48 48c0 18.5-10.5 34.6-25.9 42.6C497 275.4 504 288.9 504 304c0 23.4-16.8 42.9-38.9 47.1c4.4 7.3 6.9 15.8 6.9 24.9c0 21.3-13.9 39.4-33.1 45.6c.7 3.3 1.1 6.8 1.1 10.4c0 26.5-21.5 48-48 48l-97.5 0c-19 0-37.5-5.6-53.3-16.1l-38.5-25.7C176 420.4 160 390.4 160 358.3l0-38.3 0-48 0-24.9c0-29.2 13.3-56.7 36-75l7.4-5.9c26.5-21.2 44.6-51 51.2-84.2l2.3-11.4c5.2-26 30.5-42.9 56.5-37.7zM32 192l64 0c17.7 0 32 14.3 32 32l0 224c0 17.7-14.3 32-32 32l-64 0c-17.7 0-32-14.3-32-32L0 224c0-17.7 14.3-32 32-32z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"fill-white w-6 h-6\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 512 512\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M323.8 34.8c-38.2-10.9-78.1 11.2-89 49.4l-5.7 20c-3.7 13-10.4 25-19.5 35l-51.3 56.4c-8.9 9.8-8.2 25 1.6 33.9s25 8.2 33.9-1.6l51.3-56.4c14.1-15.5 24.4-34 30.1-54.1l5.7-20c3.6-12.7 16.9-20.1 29.7-16.5s20.1 16.9 16.5 29.7l-5.7 20c-5.7 19.9-14.7 38.7-26.6 55.5c-5.2 7.3-5.8 16.9-1.7 24.9s12.3 13 21.3 13L448 224c8.8 0 16 7.2 16 16c0 6.8-4.3 12.7-10.4 15c-7.4 2.8-13 9-14.9 16.7s.1 15.8 5.3 21.7c2.5 2.8 4 6.5 4 10.6c0 7.8-5.6 14.3-13 15.7c-8.2 1.6-15.1 7.3-18 15.2s-1.6 16.7 3.6 23.3c2.1 2.7 3.4 6.1 3.4 9.9c0 6.7-4.2 12.6-10.2 14.9c-11.5 4.5-17.7 16.9-14.4 28.8c.4 1.3 .6 2.8 .6 4.3c0 8.8-7.2 16-16 16l-97.5 0c-12.6 0-25-3.7-35.5-10.7l-61.7-41.1c-11-7.4-25.9-4.4-33.3 6.7s-4.4 25.9 6.7 33.3l61.7 41.1c18.4 12.3 40 18.8 62.1 18.8l97.5 0c34.7 0 62.9-27.6 64-62c14.6-11.7 24-29.7 24-50c0-4.5-.5-8.8-1.3-13c15.4-11.7 25.3-30.2 25.3-51c0-6.5-1-12.8-2.8-18.7C504.8 273.7 512 257.7 512 240c0-35.3-28.6-64-64-64l-92.3 0c4.7-10.4 8.7-21.2 11.8-32.2l5.7-20c10.9-38.2-11.2-78.1-49.4-89zM32 192c-17.7 0-32 14.3-32 32L0 448c0 17.7 14.3 32 32 32l64 0c17.7 0 32-14.3 32-32l0-224c0-17.7-14.3-32-32-32l-64 0z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-white m-2\",\n        children: [\" \\uC88B\\uC544\\uC694 \", like, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 17\n    }, this), dislike !== null && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDislike,\n      className: \"flex items-center\",\n      children: [isDisliked ? /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"fill-white w-6 h-6\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 512 512\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M313.4 479.1c26-5.2 42.9-30.5 37.7-56.5l-2.3-11.4c-5.3-26.7-15.1-52.1-28.8-75.2l144 0c26.5 0 48-21.5 48-48c0-18.5-10.5-34.6-25.9-42.6C497 236.6 504 223.1 504 208c0-23.4-16.8-42.9-38.9-47.1c4.4-7.3 6.9-15.8 6.9-24.9c0-21.3-13.9-39.4-33.1-45.6c.7-3.3 1.1-6.8 1.1-10.4c0-26.5-21.5-48-48-48l-97.5 0c-19 0-37.5 5.6-53.3 16.1L202.7 73.8C176 91.6 160 121.6 160 153.7l0 38.3 0 48 0 24.9c0 29.2 13.3 56.7 36 75l7.4 5.9c26.5 21.2 44.6 51 51.2 84.2l2.3 11.4c5.2 26 30.5 42.9 56.5 37.7zM32 384l64 0c17.7 0 32-14.3 32-32l0-224c0-17.7-14.3-32-32-32L32 96C14.3 96 0 110.3 0 128L0 352c0 17.7 14.3 32 32 32z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"fill-white w-6 h-6\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 512 512\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M323.8 477.2c-38.2 10.9-78.1-11.2-89-49.4l-5.7-20c-3.7-13-10.4-25-19.5-35l-51.3-56.4c-8.9-9.8-8.2-25 1.6-33.9s25-8.2 33.9 1.6l51.3 56.4c14.1 15.5 24.4 34 30.1 54.1l5.7 20c3.6 12.7 16.9 20.1 29.7 16.5s20.1-16.9 16.5-29.7l-5.7-20c-5.7-19.9-14.7-38.7-26.6-55.5c-5.2-7.3-5.8-16.9-1.7-24.9s12.3-13 21.3-13L448 288c8.8 0 16-7.2 16-16c0-6.8-4.3-12.7-10.4-15c-7.4-2.8-13-9-14.9-16.7s.1-15.8 5.3-21.7c2.5-2.8 4-6.5 4-10.6c0-7.8-5.6-14.3-13-15.7c-8.2-1.6-15.1-7.3-18-15.2s-1.6-16.7 3.6-23.3c2.1-2.7 3.4-6.1 3.4-9.9c0-6.7-4.2-12.6-10.2-14.9c-11.5-4.5-17.7-16.9-14.4-28.8c.4-1.3 .6-2.8 .6-4.3c0-8.8-7.2-16-16-16l-97.5 0c-12.6 0-25 3.7-35.5 10.7l-61.7 41.1c-11 7.4-25.9 4.4-33.3-6.7s-4.4-25.9 6.7-33.3l61.7-41.1c18.4-12.3 40-18.8 62.1-18.8L384 32c34.7 0 62.9 27.6 64 62c14.6 11.7 24 29.7 24 50c0 4.5-.5 8.8-1.3 13c15.4 11.7 25.3 30.2 25.3 51c0 6.5-1 12.8-2.8 18.7C504.8 238.3 512 254.3 512 272c0 35.3-28.6 64-64 64l-92.3 0c4.7 10.4 8.7 21.2 11.8 32.2l5.7 20c10.9 38.2-11.2 78.1-49.4 89zM32 384c-17.7 0-32-14.3-32-32L0 128c0-17.7 14.3-32 32-32l64 0c17.7 0 32 14.3 32 32l0 224c0 17.7-14.3 32-32 32l-64 0z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-white ml-2\",\n        children: [\" \\uC2EB\\uC5B4\\uC694 \", dislike, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 494,\n    columnNumber: 9\n  }, this);\n}\n_s(LikeDislikeFunc, \"zd6ayQ+gaIb5aVU615AfEioDXdA=\");\n_c = LikeDislikeFunc;\nexport default LikeDislikeFunc;\nvar _c;\n$RefreshReg$(_c, \"LikeDislikeFunc\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","LikeDislikeFunc","reviewId","love","hate","_s","isLiked","setIsLiked","like","setLike","isDisliked","setIsDisliked","dislike","setDislike","updateCount","count","setter","Math","max","updateFeedback","feedbackType","value","fetch","method","headers","body","JSON","stringify","then","res","ok","Error","json","data","console","log","catch","err","error","handleLike","existingDislike","dislikes","setDislikes","prevDislikes","setLikeCount","prevLikes","handleDislike","existingLike","setDislikeCount","className","children","onClick","xmlns","viewBox","d","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Samsung/Desktop/stellanex_graduation/src/Component/LikeDislikeFunc.js"],"sourcesContent":["// 제일 처음 코드\r\n// import React, { useState } from 'react';\r\n\r\n// function LikeDislikeFunc({reviewId}) {\r\n//     const [like, setLike] = useState(0);\r\n//     const [dislike, setDislike] = useState(0);\r\n//     const [isLiked, setIsLiked] = useState(false);\r\n//     const [isDisliked, setIsDisliked] = useState(false);\r\n\r\n//     const updateLike = (value) => {\r\n\r\n//         console.log(\"loveValue: \", value)\r\n\r\n//         fetch(`http://192.168.56.1:8080/movie/love/${reviewId}`, {\r\n//             method: 'POST',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json'\r\n//             },\r\n//             body: JSON.stringify({\r\n//                 love: value\r\n//             })\r\n//         })\r\n//         .then((res) => {\r\n//             // 응답 상태가 성공적이면 JSON으로 파싱\r\n//             if (!res.ok) {\r\n//                 throw new Error('Network response was not ok');\r\n//             }\r\n//             return res.json();\r\n//         })\r\n//         .then((data) => {\r\n//             console.log(\"서버 응답:\", data); // 서버의 응답 내용 확인\r\n//             // 필요한 로직 추가\r\n//             setLike(data.love); // 업데이트된 좋아요 수로 상태 업데이트\r\n//         })\r\n//         .catch((err) => console.error(err));\r\n//     }\r\n\r\n//     const updateDislike = (value) => {\r\n\r\n//         console.log(\"hateValue: \", value)\r\n\r\n//         fetch(`http://192.168.56.1:8080/movie/hate/${reviewId}`, {\r\n//             method: 'POST',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json'\r\n//             },\r\n//             body: JSON.stringify({\r\n//                 hate: value\r\n//             })\r\n//         })\r\n//         .then((res) => {\r\n//             // 응답 상태가 성공적이면 JSON으로 파싱\r\n//             if (!res.ok) {\r\n//                 throw new Error('Network response was not ok');\r\n//             }\r\n//             return res.json();\r\n//         })\r\n//         .then((data) => {\r\n//             console.log(\"서버 응답:\", data); // 서버의 응답 내용 확인\r\n//             // 필요한 로직 추가\r\n//             setDislike(data.hate); // 업데이트된 좋아요 수로 상태 업데이트\r\n//         })\r\n//         .catch((err) => console.error(err));\r\n//     }\r\n\r\n\r\n//     // 좋아요 버튼 클릭 처리 함수\r\n//     const handleLike = () => {\r\n//         if (isLiked) {\r\n//             setLike(like - 1); // 좋아요 취소\r\n//             updateLike(-1) // 좋아요 취소 전송\r\n//             setIsLiked(false);\r\n//         } else {\r\n//             setLike(like + 1); // 좋아요\r\n//             updateLike(1) // 좋아요 전송\r\n//             setIsLiked(true);\r\n//             if (isDisliked) {\r\n//                 setDislike(dislike - 1); // 싫어요 취소\r\n//                 updateDislike(-1) // 싫어요 취소 전송\r\n//                 setIsDisliked(false);\r\n//             }\r\n//         }\r\n//     };\r\n\r\n//     // 싫어요 버튼 클릭 처리 함수\r\n//     const handleDislike = () => {\r\n//         if (isDisliked) {\r\n//             setDislike(dislike - 1); // 싫어요 취소\r\n//             updateDislike(-1) // 싫어요 취소 전송\r\n//             setIsDisliked(false);\r\n//         } else {\r\n//             setDislike(dislike + 1); // 싫어요\r\n//             updateDislike(1) // 싫어요 전송\r\n//             setIsDisliked(true);\r\n//             if (isLiked) {\r\n//                 setLike(like - 1); // 좋아요 취소\r\n//                 updateLike(-1) // 좋아요 취소 전송\r\n//                 setIsLiked(false);\r\n//             }\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <button onClick={handleLike} className='text-white mr-2'>\r\n//                 👍 좋아요 {like}\r\n//             </button>\r\n//             <button onClick={handleDislike} className='text-white'>\r\n//                 👎 싫어요 {dislike}\r\n//             </button>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default LikeDislikeFunc;\r\n\r\n// 내가 수정한거\r\n// import React, { useEffect, useState } from 'react';\r\n\r\n// function LikeDislikeFunc({ reviewId, love, hate }) {\r\n\r\n//     const [isLiked, setIsLiked] = useState(false);\r\n//     const [like, setLike] = useState();\r\n//     const [isDisliked, setIsDisliked] = useState(false);\r\n//     const [dislike, setDislike] = useState();\r\n\r\n//     useEffect(() => {\r\n//         setLike(love);\r\n//     }, [love])\r\n\r\n//     useEffect(() => {\r\n//         setDislike(hate);\r\n//     }, [hate])\r\n\r\n//     useEffect(() => {\r\n\r\n//         fetch(`http://192.168.56.1:8080/movie/love/${reviewId}`, {\r\n//             method: 'POST',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json'\r\n//             },\r\n//             body: JSON.stringify({\r\n//                 love: isLiked ? 1 : -1  // 좋아요 상태에 따라 1 또는 -1 전달\r\n//             })\r\n//         })\r\n//             .then((res) => {\r\n//                 // 응답 상태가 성공적이면 JSON으로 파싱\r\n//                 if (!res.ok) {\r\n//                     throw new Error('Network response was not ok');\r\n//                 }\r\n//                 return res.json();\r\n//             })\r\n//             .then((data) => {\r\n//                 console.log(\"서버 응답:\", data); // 서버의 응답 내용 확인\r\n//             })\r\n//             .catch((err) => console.error(err));\r\n\r\n//     }, [like, dislike])\r\n\r\n//     useEffect(() => {\r\n\r\n//         fetch(`http://192.168.56.1:8080/movie/hate/${reviewId}`, {\r\n//             method: 'POST',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json'\r\n//             },\r\n//             body: JSON.stringify({\r\n//                 hate: isDisliked ? 1 : -1  // 좋아요 상태에 따라 1 또는 -1 전달\r\n//             })\r\n//         })\r\n//             .then((res) => {\r\n//                 // 응답 상태가 성공적이면 JSON으로 파싱\r\n//                 if (!res.ok) {\r\n//                     throw new Error('Network response was not ok');\r\n//                 }\r\n//                 return res.json();\r\n//             })\r\n//             .then((data) => {\r\n//                 console.log(\"서버 응답:\", data); // 서버의 응답 내용 확인\r\n//             })\r\n//             .catch((err) => console.error(err));\r\n\r\n//     }, [dislike, like])\r\n\r\n\r\n\r\n//     const handleLike = () => {\r\n//         if (isLiked) {\r\n//             setIsLiked(false)\r\n//             setLike(like - 1)\r\n//         } else {\r\n//             setIsLiked(true)\r\n//             setLike(like + 1)\r\n//             if (isDisliked) {\r\n//                 setIsDisliked(false);\r\n//                 setDislike(dislike - 1);\r\n//             }\r\n//         }\r\n//     }\r\n\r\n//     const handleDislike = () => {\r\n//         if (isDisliked) {\r\n//             setIsDisliked(false)\r\n//             setDislike(dislike - 1)\r\n//         } else {\r\n//             setIsDisliked(true)\r\n//             setDislike(dislike + 1)\r\n//             if (isLiked) {\r\n//                 setIsLiked(false);\r\n//                 setLike(like - 1);\r\n//             }\r\n//         }\r\n//     }\r\n\r\n//     console.log(reviewId, love, hate);\r\n\r\n//     return (\r\n//         <div className='flex justify-end items-center'>\r\n//             {like !== null && (\r\n//                 <button onClick={handleLike} className='flex items-center mr-2'>\r\n//                     {isLiked ?\r\n//                         <svg className='fill-white w-6 h-6' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n//                             <path d=\"M313.4 32.9c26 5.2 42.9 30.5 37.7 56.5l-2.3 11.4c-5.3 26.7-15.1 52.1-28.8 75.2l144 0c26.5 0 48 21.5 48 48c0 18.5-10.5 34.6-25.9 42.6C497 275.4 504 288.9 504 304c0 23.4-16.8 42.9-38.9 47.1c4.4 7.3 6.9 15.8 6.9 24.9c0 21.3-13.9 39.4-33.1 45.6c.7 3.3 1.1 6.8 1.1 10.4c0 26.5-21.5 48-48 48l-97.5 0c-19 0-37.5-5.6-53.3-16.1l-38.5-25.7C176 420.4 160 390.4 160 358.3l0-38.3 0-48 0-24.9c0-29.2 13.3-56.7 36-75l7.4-5.9c26.5-21.2 44.6-51 51.2-84.2l2.3-11.4c5.2-26 30.5-42.9 56.5-37.7zM32 192l64 0c17.7 0 32 14.3 32 32l0 224c0 17.7-14.3 32-32 32l-64 0c-17.7 0-32-14.3-32-32L0 224c0-17.7 14.3-32 32-32z\" />\r\n//                         </svg>\r\n//                         :\r\n//                         <svg className='fill-white w-6 h-6' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n//                             <path d=\"M323.8 34.8c-38.2-10.9-78.1 11.2-89 49.4l-5.7 20c-3.7 13-10.4 25-19.5 35l-51.3 56.4c-8.9 9.8-8.2 25 1.6 33.9s25 8.2 33.9-1.6l51.3-56.4c14.1-15.5 24.4-34 30.1-54.1l5.7-20c3.6-12.7 16.9-20.1 29.7-16.5s20.1 16.9 16.5 29.7l-5.7 20c-5.7 19.9-14.7 38.7-26.6 55.5c-5.2 7.3-5.8 16.9-1.7 24.9s12.3 13 21.3 13L448 224c8.8 0 16 7.2 16 16c0 6.8-4.3 12.7-10.4 15c-7.4 2.8-13 9-14.9 16.7s.1 15.8 5.3 21.7c2.5 2.8 4 6.5 4 10.6c0 7.8-5.6 14.3-13 15.7c-8.2 1.6-15.1 7.3-18 15.2s-1.6 16.7 3.6 23.3c2.1 2.7 3.4 6.1 3.4 9.9c0 6.7-4.2 12.6-10.2 14.9c-11.5 4.5-17.7 16.9-14.4 28.8c.4 1.3 .6 2.8 .6 4.3c0 8.8-7.2 16-16 16l-97.5 0c-12.6 0-25-3.7-35.5-10.7l-61.7-41.1c-11-7.4-25.9-4.4-33.3 6.7s-4.4 25.9 6.7 33.3l61.7 41.1c18.4 12.3 40 18.8 62.1 18.8l97.5 0c34.7 0 62.9-27.6 64-62c14.6-11.7 24-29.7 24-50c0-4.5-.5-8.8-1.3-13c15.4-11.7 25.3-30.2 25.3-51c0-6.5-1-12.8-2.8-18.7C504.8 273.7 512 257.7 512 240c0-35.3-28.6-64-64-64l-92.3 0c4.7-10.4 8.7-21.2 11.8-32.2l5.7-20c10.9-38.2-11.2-78.1-49.4-89zM32 192c-17.7 0-32 14.3-32 32L0 448c0 17.7 14.3 32 32 32l64 0c17.7 0 32-14.3 32-32l0-224c0-17.7-14.3-32-32-32l-64 0z\" />\r\n//                         </svg>\r\n//                     }\r\n//                     <div className='text-white m-2'> 좋아요 {like} </div>\r\n//                 </button>\r\n//             )}\r\n//             {dislike !== null && (\r\n//                 <button onClick={handleDislike} className='flex items-center'>\r\n//                     {isDisliked ?\r\n//                         <svg className='fill-white w-6 h-6' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n//                             <path d=\"M313.4 479.1c26-5.2 42.9-30.5 37.7-56.5l-2.3-11.4c-5.3-26.7-15.1-52.1-28.8-75.2l144 0c26.5 0 48-21.5 48-48c0-18.5-10.5-34.6-25.9-42.6C497 236.6 504 223.1 504 208c0-23.4-16.8-42.9-38.9-47.1c4.4-7.3 6.9-15.8 6.9-24.9c0-21.3-13.9-39.4-33.1-45.6c.7-3.3 1.1-6.8 1.1-10.4c0-26.5-21.5-48-48-48l-97.5 0c-19 0-37.5 5.6-53.3 16.1L202.7 73.8C176 91.6 160 121.6 160 153.7l0 38.3 0 48 0 24.9c0 29.2 13.3 56.7 36 75l7.4 5.9c26.5 21.2 44.6 51 51.2 84.2l2.3 11.4c5.2 26 30.5 42.9 56.5 37.7zM32 384l64 0c17.7 0 32-14.3 32-32l0-224c0-17.7-14.3-32-32-32L32 96C14.3 96 0 110.3 0 128L0 352c0 17.7 14.3 32 32 32z\" />\r\n//                         </svg>\r\n//                         : <svg className='fill-white w-6 h-6' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n//                             <path d=\"M323.8 477.2c-38.2 10.9-78.1-11.2-89-49.4l-5.7-20c-3.7-13-10.4-25-19.5-35l-51.3-56.4c-8.9-9.8-8.2-25 1.6-33.9s25-8.2 33.9 1.6l51.3 56.4c14.1 15.5 24.4 34 30.1 54.1l5.7 20c3.6 12.7 16.9 20.1 29.7 16.5s20.1-16.9 16.5-29.7l-5.7-20c-5.7-19.9-14.7-38.7-26.6-55.5c-5.2-7.3-5.8-16.9-1.7-24.9s12.3-13 21.3-13L448 288c8.8 0 16-7.2 16-16c0-6.8-4.3-12.7-10.4-15c-7.4-2.8-13-9-14.9-16.7s.1-15.8 5.3-21.7c2.5-2.8 4-6.5 4-10.6c0-7.8-5.6-14.3-13-15.7c-8.2-1.6-15.1-7.3-18-15.2s-1.6-16.7 3.6-23.3c2.1-2.7 3.4-6.1 3.4-9.9c0-6.7-4.2-12.6-10.2-14.9c-11.5-4.5-17.7-16.9-14.4-28.8c.4-1.3 .6-2.8 .6-4.3c0-8.8-7.2-16-16-16l-97.5 0c-12.6 0-25 3.7-35.5 10.7l-61.7 41.1c-11 7.4-25.9 4.4-33.3-6.7s-4.4-25.9 6.7-33.3l61.7-41.1c18.4-12.3 40-18.8 62.1-18.8L384 32c34.7 0 62.9 27.6 64 62c14.6 11.7 24 29.7 24 50c0 4.5-.5 8.8-1.3 13c15.4 11.7 25.3 30.2 25.3 51c0 6.5-1 12.8-2.8 18.7C504.8 238.3 512 254.3 512 272c0 35.3-28.6 64-64 64l-92.3 0c4.7 10.4 8.7 21.2 11.8 32.2l5.7 20c10.9 38.2-11.2 78.1-49.4 89zM32 384c-17.7 0-32-14.3-32-32L0 128c0-17.7 14.3-32 32-32l64 0c17.7 0 32 14.3 32 32l0 224c0 17.7-14.3 32-32 32l-64 0z\" />\r\n//                         </svg>\r\n//                     }\r\n//                     <div className='text-white ml-2'> 싫어요 {dislike} </div>\r\n//                 </button>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default LikeDislikeFunc;\r\n\r\n\r\n// 오빠가 수정한 거\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nfunction LikeDislikeFunc({ reviewId, love, hate }) {\r\n\r\n    const [isLiked, setIsLiked] = useState(false);\r\n    const [like, setLike] = useState();\r\n    const [isDisliked, setIsDisliked] = useState(false);\r\n    const [dislike, setDislike] = useState();\r\n\r\n    useEffect(() => {\r\n        setLike(love);\r\n    }, [love])\r\n\r\n    useEffect(() => {\r\n        setDislike(hate);\r\n    }, [hate])\r\n\r\n    // useEffect(() => {\r\n\r\n    //     fetch(`http://192.168.56.1:8080/movie/love/${reviewId}`, {\r\n    //         method: 'POST',\r\n    //         headers: {\r\n    //             'Content-Type': 'application/json'\r\n    //         },\r\n    //         body: JSON.stringify({\r\n    //             love: isLiked ? 1 : -1  // 좋아요 상태에 따라 1 또는 -1 전달\r\n    //         })\r\n    //     })\r\n    //         .then((res) => {\r\n    //             // 응답 상태가 성공적이면 JSON으로 파싱\r\n    //             if (!res.ok) {\r\n    //                 throw new Error('Network response was not ok');\r\n    //             }\r\n    //             return res.json();\r\n    //         })\r\n    //         .then((data) => {\r\n    //             console.log(\"서버 응답:\", data); // 서버의 응답 내용 확인\r\n    //         })\r\n    //         .catch((err) => console.error(err));\r\n\r\n    // }, [like])\r\n\r\n    // useEffect(() => {\r\n\r\n    //     fetch(`http://192.168.56.1:8080/movie/hate/${reviewId}`, {\r\n    //         method: 'POST',\r\n    //         headers: {\r\n    //             'Content-Type': 'application/json'\r\n    //         },\r\n    //         body: JSON.stringify({\r\n    //             hate: isDisliked ? 1 : -1  // 좋아요 상태에 따라 1 또는 -1 전달\r\n    //         })\r\n    //     })\r\n    //         .then((res) => {\r\n    //             // 응답 상태가 성공적이면 JSON으로 파싱\r\n    //             if (!res.ok) {\r\n    //                 throw new Error('Network response was not ok');\r\n    //             }\r\n    //             return res.json();\r\n    //         })\r\n    //         .then((data) => {\r\n    //             console.log(\"서버 응답:\", data); // 서버의 응답 내용 확인\r\n    //         })\r\n    //         .catch((err) => console.error(err));\r\n\r\n    // }, [dislike])\r\n\r\n\r\n\r\n    // const handleLike = () => {\r\n    //     if (isLiked) {\r\n    //         setIsLiked(false)\r\n    //         setLike(like - 1)\r\n    //     } else {\r\n    //         setIsLiked(true)\r\n    //         setLike(like + 1)\r\n    //         if (isDisliked) {\r\n    //             setIsDisliked(false);\r\n    //             setDislike(dislike - 1);\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    // const handleDislike = () => {\r\n    //     if (isDisliked) {\r\n    //         setIsDisliked(false)\r\n    //         setDislike(dislike - 1)\r\n    //     } else {\r\n    //         setIsDisliked(true)\r\n    //         setDislike(dislike + 1)\r\n    //         if (isLiked) {\r\n    //             setIsLiked(false);\r\n    //             setLike(like - 1);\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n\r\n    // const updateFeedback = (type, value) => {\r\n    //     fetch(`http://192.168.56.1:8080/movie/${type}/${reviewId}`, {\r\n    //         method: 'POST',\r\n    //         headers: {\r\n    //             'Content-Type': 'application/json',\r\n    //         },\r\n    //         body: JSON.stringify({ [type]: value }),\r\n    //     })\r\n    //         .then((res) => {\r\n    //             if (!res.ok) throw new Error('Network response was not ok');\r\n    //             return res.json();\r\n    //         })\r\n    //         .then((data) => console.log(\"서버 응답:\", data))\r\n    //         .catch((err) => console.error(err));\r\n    // };\r\n\r\n    // const handleLike = () => {\r\n    //     if (isLiked) {\r\n    //         setLike((prev) => prev - 1);\r\n    //         updateFeedback('love', -1);\r\n    //     } else {\r\n    //         setLike((prev) => prev + 1);\r\n    //         updateFeedback('love', 1);\r\n    //         if (isDisliked) {\r\n    //             setDislike(false);\r\n    //             setDislike((prev) => prev - 1);\r\n    //             updateFeedback('hate', -1);\r\n    //         }\r\n    //     }\r\n    //     setIsLiked(!isLiked);\r\n    // };\r\n    // // 좋아요 방어 0이하 방어 로직\r\n    // const handleDislike = () => {\r\n    //     if (isDisliked) {\r\n    //         // dislike를 취소하는 경우\r\n    //         setDislike((prev) => Math.max(prev - 1, 0)); // 0 이하로 떨어지지 않도록\r\n    //         updateFeedback('hate', -1);\r\n    //     } else {\r\n    //         // dislike를 추가하는 경우\r\n    //         setDislike((prev) => prev + 1);\r\n    //         updateFeedback('hate', 1);\r\n\r\n    //         // 이미 좋아요가 눌렸다면\r\n    //         if (isLiked) {\r\n    //             setIsLiked(false);\r\n    //             setLike((prev) => Math.max(prev - 1, 0)); // 0 이하로 떨어지지 않도록\r\n    //             updateFeedback('love', -1);\r\n    //         }\r\n    //     }\r\n    //     setIsDisliked(!isDisliked);\r\n    // };\r\n\r\n    // // dislike를 업데이트하는 부분\r\n    // const handleDislikeChange = (newDislikeCount) => {\r\n    //     // 새로운 dislike 수가 0보다 작은 경우 0으로 설정\r\n    //     const validDislikeCount = Math.max(newDislikeCount, 0);\r\n    //     setDislike(validDislikeCount);\r\n    // };\r\n\r\n\r\n    const updateCount = (count, setter) => Math.max(count, 0);\r\n\r\n    const updateFeedback = (feedbackType, value) => {\r\n    fetch(`http://192.168.56.1:8080/movie/${feedbackType}/${reviewId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ [feedbackType]: value }),\r\n    })\r\n        .then((res) => {\r\n            if (!res.ok) throw new Error('Network response was not ok');\r\n            return res.json();\r\n        })\r\n        .then((data) => console.log(\"서버 응답:\", data))\r\n        .catch((err) => console.error(err));\r\n};\r\n\r\n// const handleLike = () => {\r\n//     setLike((prev) => {\r\n//         const newLike = isLiked ? updateCount(prev - 1, setLike) : updateCount(prev + 1, setLike);\r\n//         updateFeedback('love', isLiked ? -1 : 1);\r\n//         return newLike;\r\n//     });\r\n//     setIsLiked(!isLiked);\r\n\r\n//     if (isDisliked) {\r\n//         setDislike((prev) => updateCount(prev - 1, setDislike));\r\n//         updateFeedback('hate', -1);\r\n//         setIsDisliked(false);\r\n//     }\r\n// };\r\n\r\n// const handleDislike = () => {\r\n//     setDislike((prev) => {\r\n//         const newDislike = isDisliked ? updateCount(prev - 1, setDislike) : updateCount(prev + 1, setDislike);\r\n//         updateFeedback('hate', isDisliked ? -1 : 1);\r\n//         return newDislike;\r\n//     });\r\n//     setIsDisliked(!isDisliked);\r\n\r\n//     if (isLiked) {\r\n//         setLike((prev) => updateCount(prev - 1, setLike));\r\n//         updateFeedback('love', -1);\r\n//         setIsLiked(false);\r\n//     }\r\n// };\r\n\r\n// JSX 부분 생략\r\nconst handleLike = (reviewId) => {\r\n    const existingDislike = dislikes[reviewId] || 0; // 현재 싫어요 값 가져오기\r\n    if (existingDislike === 1) {\r\n        // 싫어요가 1일 경우, 싫어요를 0으로 변경\r\n        setDislikes((prevDislikes) => ({\r\n            ...prevDislikes,\r\n            [reviewId]: 0,\r\n        }));\r\n        setLikeCount((prevLikes) => prevLikes + 1); // 좋아요를 1 증가\r\n    } else {\r\n        // 싫어요가 없거나 0일 경우, 좋아요만 증가\r\n        setLikeCount((prevLikes) => prevLikes + 1);\r\n    }\r\n};\r\n\r\nconst handleDislike = (reviewId) => {\r\n    const existingLike = like[reviewId] || 0; // 현재 좋아요 값 가져오기\r\n    if (existingLike === 1) {\r\n        // 좋아요가 1일 경우, 좋아요를 0으로 변경\r\n        setLike((prevLikes) => ({\r\n            ...prevLikes,\r\n            [reviewId]: 0,\r\n        }));\r\n        setDislikeCount((prevDislikes) => prevDislikes + 1); // 싫어요를 1 증가\r\n    } else {\r\n        // 좋아요가 없거나 0일 경우, 싫어요만 증가\r\n        setDislikeCount((prevDislikes) => prevDislikes + 1);\r\n    }\r\n};\r\n\r\n\r\n    console.log(reviewId, love, hate);\r\n    return (\r\n        <div className='flex justify-end items-center'>\r\n            {like !== null && (\r\n                <button onClick={handleLike} className='flex items-center mr-2'>\r\n                    {isLiked ?\r\n                        <svg className='fill-white w-6 h-6' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n                            <path d=\"M313.4 32.9c26 5.2 42.9 30.5 37.7 56.5l-2.3 11.4c-5.3 26.7-15.1 52.1-28.8 75.2l144 0c26.5 0 48 21.5 48 48c0 18.5-10.5 34.6-25.9 42.6C497 275.4 504 288.9 504 304c0 23.4-16.8 42.9-38.9 47.1c4.4 7.3 6.9 15.8 6.9 24.9c0 21.3-13.9 39.4-33.1 45.6c.7 3.3 1.1 6.8 1.1 10.4c0 26.5-21.5 48-48 48l-97.5 0c-19 0-37.5-5.6-53.3-16.1l-38.5-25.7C176 420.4 160 390.4 160 358.3l0-38.3 0-48 0-24.9c0-29.2 13.3-56.7 36-75l7.4-5.9c26.5-21.2 44.6-51 51.2-84.2l2.3-11.4c5.2-26 30.5-42.9 56.5-37.7zM32 192l64 0c17.7 0 32 14.3 32 32l0 224c0 17.7-14.3 32-32 32l-64 0c-17.7 0-32-14.3-32-32L0 224c0-17.7 14.3-32 32-32z\" />\r\n                        </svg>\r\n                        :\r\n                        <svg className='fill-white w-6 h-6' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n                            <path d=\"M323.8 34.8c-38.2-10.9-78.1 11.2-89 49.4l-5.7 20c-3.7 13-10.4 25-19.5 35l-51.3 56.4c-8.9 9.8-8.2 25 1.6 33.9s25 8.2 33.9-1.6l51.3-56.4c14.1-15.5 24.4-34 30.1-54.1l5.7-20c3.6-12.7 16.9-20.1 29.7-16.5s20.1 16.9 16.5 29.7l-5.7 20c-5.7 19.9-14.7 38.7-26.6 55.5c-5.2 7.3-5.8 16.9-1.7 24.9s12.3 13 21.3 13L448 224c8.8 0 16 7.2 16 16c0 6.8-4.3 12.7-10.4 15c-7.4 2.8-13 9-14.9 16.7s.1 15.8 5.3 21.7c2.5 2.8 4 6.5 4 10.6c0 7.8-5.6 14.3-13 15.7c-8.2 1.6-15.1 7.3-18 15.2s-1.6 16.7 3.6 23.3c2.1 2.7 3.4 6.1 3.4 9.9c0 6.7-4.2 12.6-10.2 14.9c-11.5 4.5-17.7 16.9-14.4 28.8c.4 1.3 .6 2.8 .6 4.3c0 8.8-7.2 16-16 16l-97.5 0c-12.6 0-25-3.7-35.5-10.7l-61.7-41.1c-11-7.4-25.9-4.4-33.3 6.7s-4.4 25.9 6.7 33.3l61.7 41.1c18.4 12.3 40 18.8 62.1 18.8l97.5 0c34.7 0 62.9-27.6 64-62c14.6-11.7 24-29.7 24-50c0-4.5-.5-8.8-1.3-13c15.4-11.7 25.3-30.2 25.3-51c0-6.5-1-12.8-2.8-18.7C504.8 273.7 512 257.7 512 240c0-35.3-28.6-64-64-64l-92.3 0c4.7-10.4 8.7-21.2 11.8-32.2l5.7-20c10.9-38.2-11.2-78.1-49.4-89zM32 192c-17.7 0-32 14.3-32 32L0 448c0 17.7 14.3 32 32 32l64 0c17.7 0 32-14.3 32-32l0-224c0-17.7-14.3-32-32-32l-64 0z\" />\r\n                        </svg>\r\n                    }\r\n                    <div className='text-white m-2'> 좋아요 {like} </div>\r\n                </button>\r\n            )}\r\n            {dislike !== null && (\r\n                <button onClick={handleDislike} className='flex items-center'>\r\n                    {isDisliked ?\r\n                        <svg className='fill-white w-6 h-6' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n                            <path d=\"M313.4 479.1c26-5.2 42.9-30.5 37.7-56.5l-2.3-11.4c-5.3-26.7-15.1-52.1-28.8-75.2l144 0c26.5 0 48-21.5 48-48c0-18.5-10.5-34.6-25.9-42.6C497 236.6 504 223.1 504 208c0-23.4-16.8-42.9-38.9-47.1c4.4-7.3 6.9-15.8 6.9-24.9c0-21.3-13.9-39.4-33.1-45.6c.7-3.3 1.1-6.8 1.1-10.4c0-26.5-21.5-48-48-48l-97.5 0c-19 0-37.5 5.6-53.3 16.1L202.7 73.8C176 91.6 160 121.6 160 153.7l0 38.3 0 48 0 24.9c0 29.2 13.3 56.7 36 75l7.4 5.9c26.5 21.2 44.6 51 51.2 84.2l2.3 11.4c5.2 26 30.5 42.9 56.5 37.7zM32 384l64 0c17.7 0 32-14.3 32-32l0-224c0-17.7-14.3-32-32-32L32 96C14.3 96 0 110.3 0 128L0 352c0 17.7 14.3 32 32 32z\" />\r\n                        </svg>\r\n                        : <svg className='fill-white w-6 h-6' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n                            <path d=\"M323.8 477.2c-38.2 10.9-78.1-11.2-89-49.4l-5.7-20c-3.7-13-10.4-25-19.5-35l-51.3-56.4c-8.9-9.8-8.2-25 1.6-33.9s25-8.2 33.9 1.6l51.3 56.4c14.1 15.5 24.4 34 30.1 54.1l5.7 20c3.6 12.7 16.9 20.1 29.7 16.5s20.1-16.9 16.5-29.7l-5.7-20c-5.7-19.9-14.7-38.7-26.6-55.5c-5.2-7.3-5.8-16.9-1.7-24.9s12.3-13 21.3-13L448 288c8.8 0 16-7.2 16-16c0-6.8-4.3-12.7-10.4-15c-7.4-2.8-13-9-14.9-16.7s.1-15.8 5.3-21.7c2.5-2.8 4-6.5 4-10.6c0-7.8-5.6-14.3-13-15.7c-8.2-1.6-15.1-7.3-18-15.2s-1.6-16.7 3.6-23.3c2.1-2.7 3.4-6.1 3.4-9.9c0-6.7-4.2-12.6-10.2-14.9c-11.5-4.5-17.7-16.9-14.4-28.8c.4-1.3 .6-2.8 .6-4.3c0-8.8-7.2-16-16-16l-97.5 0c-12.6 0-25 3.7-35.5 10.7l-61.7 41.1c-11 7.4-25.9 4.4-33.3-6.7s-4.4-25.9 6.7-33.3l61.7-41.1c18.4-12.3 40-18.8 62.1-18.8L384 32c34.7 0 62.9 27.6 64 62c14.6 11.7 24 29.7 24 50c0 4.5-.5 8.8-1.3 13c15.4 11.7 25.3 30.2 25.3 51c0 6.5-1 12.8-2.8 18.7C504.8 238.3 512 254.3 512 272c0 35.3-28.6 64-64 64l-92.3 0c4.7 10.4 8.7 21.2 11.8 32.2l5.7 20c10.9 38.2-11.2 78.1-49.4 89zM32 384c-17.7 0-32-14.3-32-32L0 128c0-17.7 14.3-32 32-32l64 0c17.7 0 32 14.3 32 32l0 224c0 17.7-14.3 32-32 32l-64 0z\" />\r\n                        </svg>\r\n                    }\r\n                    <div className='text-white ml-2'> 싫어요 {dislike} </div>\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LikeDislikeFunc;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,eAAeA,CAAC;EAAEC,QAAQ;EAAEC,IAAI;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAE/C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,CAAC;EAClC,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZY,OAAO,CAACN,IAAI,CAAC;EACjB,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEVN,SAAS,CAAC,MAAM;IACZgB,UAAU,CAACT,IAAI,CAAC;EACpB,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;;EAEV;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAIA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAGA,MAAMU,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAKC,IAAI,CA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}