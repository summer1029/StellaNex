{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\Desktop\\\\K-Digital\\\\MiniProject\\\\K5_MiniProject\\\\src\\\\Component\\\\Register.js\";\n// import React from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import RegisterForm from './RegisterForm';\n\n// export default function Register() {\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (name, email, password, birth) => {\n//     try {\n\n//       if (name.trim() === \"\" || email.trim() === \"\" || password.trim() === \"\" || birth.trim() === \"\") {\n//         alert(\"Email address, password, name and birth cannot be empty!\")\n//         return\n//       }\n\n//       const response = await fetch(\"http://10.125.121.181:8080/member/join\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({\n//           name: name,\n//           email: email,\n//           password: password,\n//           birth: birth\n//         }),\n//       });\n//       const data = await response.json();\n//       console.log(\"res 결과\", response)\n//       console.log(\"데이터 결과\", data)\n\n//       if (data.status == 200) {\n//         navigate(\"/Login\"); // 회원가입 성공 시 로그인 페이지로 이동합니다.\n//       } else {\n//         console.error(\"회원가입 실패:\", data.error);\n//       }\n//     } catch (error) {\n//       console.log(error)\n//       console.error('에러 발생:', error);\n//       throw error; // 에러를 다시 던져서 상위 컴포넌트에서 처리할 수 있도록 합니다.\n//     }\n//   }\n\n//   return <RegisterForm onSubmit={handleSubmit} />;\n// }\n\nimport React from 'react';\nimport RegisterForm from './RegisterForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  const handleSubmit = (name, email, password, birth) => {\n    if (name.trim() == \"\" || email.trim() == \"\" || password.trim() == \"\" || birth.trim() == \"\") {\n      alert(\"Email address, password, name and birth cannot be empty!\");\n      return;\n    }\n    fetch(\"http://10.125.121.181:8080/member/join\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: name,\n        email: email,\n        password: password,\n        birth: birth\n      })\n    }).then(res => {\n      console.log(res.json());\n      res.json();\n    }).catch(err => console.log('에러 발생:', err));\n  };\n  return /*#__PURE__*/_jsxDEV(RegisterForm, {\n    onSubmit: handleSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","RegisterForm","jsxDEV","_jsxDEV","Register","handleSubmit","name","email","password","birth","trim","alert","fetch","method","headers","body","JSON","stringify","then","res","console","log","json","catch","err","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Samsung/Desktop/K-Digital/MiniProject/K5_MiniProject/src/Component/Register.js"],"sourcesContent":["// import React from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import RegisterForm from './RegisterForm';\r\n\r\n// export default function Register() {\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleSubmit = async (name, email, password, birth) => {\r\n//     try {\r\n\r\n//       if (name.trim() === \"\" || email.trim() === \"\" || password.trim() === \"\" || birth.trim() === \"\") {\r\n//         alert(\"Email address, password, name and birth cannot be empty!\")\r\n//         return\r\n//       }\r\n\r\n//       const response = await fetch(\"http://10.125.121.181:8080/member/join\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify({\r\n//           name: name,\r\n//           email: email,\r\n//           password: password,\r\n//           birth: birth\r\n//         }),\r\n//       });\r\n//       const data = await response.json();\r\n//       console.log(\"res 결과\", response)\r\n//       console.log(\"데이터 결과\", data)\r\n\r\n//       if (data.status == 200) {\r\n//         navigate(\"/Login\"); // 회원가입 성공 시 로그인 페이지로 이동합니다.\r\n//       } else {\r\n//         console.error(\"회원가입 실패:\", data.error);\r\n//       }\r\n//     } catch (error) {\r\n//       console.log(error)\r\n//       console.error('에러 발생:', error);\r\n//       throw error; // 에러를 다시 던져서 상위 컴포넌트에서 처리할 수 있도록 합니다.\r\n//     }\r\n//   }\r\n\r\n//   return <RegisterForm onSubmit={handleSubmit} />;\r\n// }\r\n\r\nimport React from 'react'\r\nimport RegisterForm from './RegisterForm'\r\n\r\nexport default function Register() {\r\n\r\n  const handleSubmit = (name, email, password, birth) => {\r\n\r\n    if (name.trim() == \"\" || email.trim() == \"\" || password.trim() == \"\" || birth.trim() == \"\") {\r\n      alert(\"Email address, password, name and birth cannot be empty!\")\r\n      return\r\n    }\r\n\r\n    fetch(\"http://10.125.121.181:8080/member/join\", {\r\n      method : \"POST\", \r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body : JSON.stringify({\r\n        name : name,\r\n        email : email,\r\n        password : password,\r\n        birth : birth\r\n      }),\r\n    })\r\n    .then(res => {\r\n      console.log(res.json())\r\n      res.json()})\r\n    .catch(err => console.log('에러 발생:', err))\r\n  }\r\n\r\n  return (\r\n    <RegisterForm onSubmit={handleSubmit} />\r\n  )\r\n}\r\n\r\n\r\n"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,eAAe,SAASC,QAAQA,CAAA,EAAG;EAEjC,MAAMC,YAAY,GAAGA,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,KAAK,KAAK;IAErD,IAAIH,IAAI,CAACI,IAAI,CAAC,CAAC,IAAI,EAAE,IAAIH,KAAK,CAACG,IAAI,CAAC,CAAC,IAAI,EAAE,IAAIF,QAAQ,CAACE,IAAI,CAAC,CAAC,IAAI,EAAE,IAAID,KAAK,CAACC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;MAC1FC,KAAK,CAAC,0DAA0D,CAAC;MACjE;IACF;IAEAC,KAAK,CAAC,wCAAwC,EAAE;MAC9CC,MAAM,EAAG,MAAM;MACfC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAGC,IAAI,CAACC,SAAS,CAAC;QACpBX,IAAI,EAAGA,IAAI;QACXC,KAAK,EAAGA,KAAK;QACbC,QAAQ,EAAGA,QAAQ;QACnBC,KAAK,EAAGA;MACV,CAAC;IACH,CAAC,CAAC,CACDS,IAAI,CAACC,GAAG,IAAI;MACXC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAAC,CAAC,CAAC;MACvBH,GAAG,CAACG,IAAI,CAAC,CAAC;IAAA,CAAC,CAAC,CACbC,KAAK,CAACC,GAAG,IAAIJ,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEG,GAAG,CAAC,CAAC;EAC3C,CAAC;EAED,oBACErB,OAAA,CAACF,YAAY;IAACwB,QAAQ,EAAEpB;EAAa;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAE5C;AAACC,EAAA,GA9BuB1B,QAAQ;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}